<Window
    x:Class="VOP.ScanSettingDialog"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:VOP.Controls"
	x:Name="Window"
	Title="ScanSetting"
    Width="585" 
	Height="593"
    AllowsTransparency="true"
    WindowStartupLocation="CenterOwner"
    ResizeMode="NoResize"
    WindowStyle="None" 
    BorderThickness="24"
    Foreground="Black"
    xmlns:vop="clr-namespace:VOP"
    ShowInTaskbar="False" 
    Loaded="handler_loaded"
    >
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../../Controls/CustomButton.xaml"/>
                <ResourceDictionary Source="../../Controls/CustomCheckBox.xaml"/>
                <ResourceDictionary Source="../../Controls/CustomTextBoxRes.xaml"/>
                <ResourceDictionary Source="../../Controls/CustomRadioButton.xaml"/>
                <ResourceDictionary Source="../../Controls/AdjustButton.xaml"/>
                <ResourceDictionary Source="../../Controls/CustomComboBox.xaml"/>
                <ResourceDictionary Source="../../Controls/CustomRadioButtonEx.xaml"/>
                <ResourceDictionary Source="../../Controls/SpinnerControl/SpinnerControlStyle.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key ="SpinnerControl1"  TargetType="{x:Type local:SpinnerControl}">
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Focusable" Value="False"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:SpinnerControl}">
                            <Grid Background="{Binding Path=Background, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <!--
                                    we use the TemplatedParent binding to get a reference to the control
                                    this template has been applied to, so we can access the property on it
                                -->
                                <RepeatButton Name="btnDecrease"
                                      Grid.Row="0"
                                      Grid.Column="0"
                                      Width="30"
                                      Height="30"
                                      Style="{StaticResource CustomMinusButtonStyle}" 
                                      Command="{x:Static local:SpinnerControl.DecreaseCommand}"/>

                                <TextBox Name="tbTextBox"
                                 Grid.Row="0"
                                 Grid.Column="1"
                                 Background="{Binding Path=Background, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                 BorderBrush="{StaticResource TextBoxBorderBrush}"
                                 Foreground="#FF707070"
                                 TextAlignment="Center"
                                 IsReadOnly="False"
                                 BorderThickness="0"
                                 FontSize="30" 
                                 Margin="0,0,0,2"
                                 MaxLength="3"
                                 Style="{StaticResource TextBoxErrorTemplateStyle}"
                                 InputMethod.IsInputMethodEnabled="False"
                                 VerticalAlignment="Center"
                                 >
                                    <TextBox.InputBindings>
                                        <KeyBinding Command="NotACommand" Gesture="Ctrl+V"/>
                                    </TextBox.InputBindings>
                                    <TextBox.ContextMenu>
                                        <ContextMenu Visibility="Collapsed">
                                        </ContextMenu>
                                    </TextBox.ContextMenu>
                                    <TextBox.Text>
                                        <Binding RelativeSource="{RelativeSource TemplatedParent}" 
                                         Mode="TwoWay"
                                         Path="FormattedValue" 
                                         UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <local:PrintCopysValidationRule MinimumValue="0" MaximumValue="100" 
										ErrorMessage="{StaticResource ResStr_The_valid_range_is_0_100__please_confirm_and_enter_again_}" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>


                                <RepeatButton Name="btnIncrease"
                                      Grid.Row="0"
                                      Grid.Column="2"
                                      Width="30"
                                      Height="30"
                                      Style="{StaticResource CustomPlusButtonStyle}" 
                                      Command="{x:Static local:SpinnerControl.IncreaseCommand}"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger SourceName="tbTextBox" Property="Validation.HasError"  Value="true">
                                    <Setter Property="ValidationHasError" Value="True"></Setter>
                                    <Setter TargetName="btnDecrease" Property="IsEnabled" Value="False"></Setter>
                                    <Setter TargetName="btnIncrease" Property="IsEnabled" Value="False"></Setter>
                                </Trigger>

                                <Trigger SourceName="tbTextBox"  Property="Validation.HasError" Value="False">
                                    <Setter Property="ValidationHasError" Value="False"></Setter>
                                    <Setter TargetName="btnDecrease" Property="IsEnabled" Value="true"></Setter>
                                    <Setter TargetName="btnIncrease" Property="IsEnabled" Value="true"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <ControlTemplate x:Key="colorRadioButton" TargetType="{x:Type RadioButton}" >
                <Grid Width="{TemplateBinding Width}"
                      Height="{TemplateBinding Height}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="26"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>

                    <Image Height="20" Width="20" Grid.Column="0" Name="imgCheck" Source="../../Images/Checked.png" Visibility="Hidden" VerticalAlignment="Center" HorizontalAlignment="Left"></Image>
                    <Image Height="20" Width="20" Grid.Column="0" Name="imgUncheck" Source="../../Images/Uncheck.png" Visibility="Hidden" VerticalAlignment="Center" HorizontalAlignment="Left"></Image>
                    <Image Height="20" Width="20" Grid.Column="0" Name="imgCheckDisable" Source="../../Images/Checked_Disable.png" Visibility="Hidden" VerticalAlignment="Center" HorizontalAlignment="Left"></Image>
                    <Image Height="20" Width="20" Grid.Column="0" Name="imgUncheckDisable" Source="../../Images/Uncheck_Disable.png" Visibility="Hidden" VerticalAlignment="Center" HorizontalAlignment="Left"></Image>
                    <Image Height="30" Width="30" Grid.Column="1" Name="Color" Stretch="Fill" Source="../../Images/Color.png" Visibility="Visible" VerticalAlignment="Center" HorizontalAlignment="Right"></Image>
                </Grid>
                <ControlTemplate.Triggers>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsChecked" Value="false"></Condition>
                            <Condition Property="IsEnabled" Value="false"></Condition>
                        </MultiTrigger.Conditions>

                        <Setter TargetName="imgCheck" Property="Visibility" Value="Hidden"/>
                        <Setter TargetName="imgUncheck" Property="Visibility" Value="Hidden"/>
                        <Setter TargetName="imgCheckDisable" Property="Visibility" Value="Hidden"/>
                        <Setter TargetName="imgUncheckDisable" Property="Visibility" Value="Visible"/>
                    </MultiTrigger>

                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsChecked" Value="true"></Condition>
                            <Condition Property="IsEnabled" Value="false"></Condition>
                        </MultiTrigger.Conditions>
                        
                        <Setter TargetName="imgCheck" Property="Visibility" Value="Hidden"/>
                        <Setter TargetName="imgUncheck" Property="Visibility" Value="Hidden"/>
                        <Setter TargetName="imgCheckDisable" Property="Visibility" Value="Visible"/>
                        <Setter TargetName="imgUncheckDisable" Property="Visibility" Value="Hidden"/>
                    </MultiTrigger>


                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsChecked" Value="true"></Condition>
                            <Condition Property="IsEnabled" Value="true"></Condition>
                        </MultiTrigger.Conditions>

                        <Setter TargetName="imgCheck" Property="Visibility" Value="Visible"/>
                        <Setter TargetName="imgUncheck" Property="Visibility" Value="Hidden"/>
                        <Setter TargetName="imgCheckDisable" Property="Visibility" Value="Hidden"/>
                        <Setter TargetName="imgUncheckDisable" Property="Visibility" Value="Hidden"/>
                    </MultiTrigger>

                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsChecked" Value="false"></Condition>
                            <Condition Property="IsEnabled" Value="true"></Condition>
                        </MultiTrigger.Conditions>

                        <Setter TargetName="imgUncheck" Property="Visibility" Value="Visible"/>
                        <Setter TargetName="imgCheckDisable" Property="Visibility" Value="Hidden"/>
                        <Setter TargetName="imgUncheckDisable" Property="Visibility" Value="Hidden"/>
                    </MultiTrigger>

                    <Trigger  Property="IsFocused" Value="True">
                        <Setter Property="FocusVisualStyle">
                            <Setter.Value>
                                <Style>
                                    <Setter Property="Control.Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <Rectangle Margin="-1,0,-3,0" StrokeThickness="1" Stroke="Black" StrokeDashArray="1 2"/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Setter.Value>
                        </Setter>
                    </Trigger>


                </ControlTemplate.Triggers>
            </ControlTemplate>
            <ControlTemplate x:Key="grayRadioButton" TargetType="{x:Type RadioButton}" >
                <Grid Width="{TemplateBinding Width}"
                      Height="{TemplateBinding Height}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="26"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>

                    <Image Height="20" Width="20" Grid.Column="0" Name="imgCheck" Source="../../Images/Checked.png" Visibility="Hidden" VerticalAlignment="Center" HorizontalAlignment="Left"></Image>
                    <Image Height="20" Width="20" Grid.Column="0" Name="imgUncheck" Source="../../Images/Uncheck.png" Visibility="Hidden" VerticalAlignment="Center" HorizontalAlignment="Left"></Image>
                    <Image Height="20" Width="20" Grid.Column="0" Name="imgCheckDisable" Source="../../Images/Checked_Disable.png" Visibility="Hidden" VerticalAlignment="Center" HorizontalAlignment="Left"></Image>
                    <Image Height="20" Width="20" Grid.Column="0" Name="imgUncheckDisable" Source="../../Images/Uncheck_Disable.png" Visibility="Hidden" VerticalAlignment="Center" HorizontalAlignment="Left"></Image>
                    <Image Height="30" Width="30" Grid.Column="1" Name="Color" Stretch="Fill" Source="../../Images/Grayscale.png" Visibility="Visible" VerticalAlignment="Center" HorizontalAlignment="Right"></Image>
                </Grid>
                <ControlTemplate.Triggers>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsChecked" Value="false"></Condition>
                            <Condition Property="IsEnabled" Value="false"></Condition>
                        </MultiTrigger.Conditions>

                        <Setter TargetName="imgCheck" Property="Visibility" Value="Hidden"/>
                        <Setter TargetName="imgUncheck" Property="Visibility" Value="Hidden"/>
                        <Setter TargetName="imgCheckDisable" Property="Visibility" Value="Hidden"/>
                        <Setter TargetName="imgUncheckDisable" Property="Visibility" Value="Visible"/>
                    </MultiTrigger>

                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsChecked" Value="true"></Condition>
                            <Condition Property="IsEnabled" Value="false"></Condition>
                        </MultiTrigger.Conditions>

                        <Setter TargetName="imgCheck" Property="Visibility" Value="Hidden"/>
                        <Setter TargetName="imgUncheck" Property="Visibility" Value="Hidden"/>
                        <Setter TargetName="imgCheckDisable" Property="Visibility" Value="Visible"/>
                        <Setter TargetName="imgUncheckDisable" Property="Visibility" Value="Hidden"/>
                    </MultiTrigger>


                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsChecked" Value="true"></Condition>
                            <Condition Property="IsEnabled" Value="true"></Condition>
                        </MultiTrigger.Conditions>

                        <Setter TargetName="imgCheck" Property="Visibility" Value="Visible"/>
                        <Setter TargetName="imgUncheck" Property="Visibility" Value="Hidden"/>
                        <Setter TargetName="imgCheckDisable" Property="Visibility" Value="Hidden"/>
                        <Setter TargetName="imgUncheckDisable" Property="Visibility" Value="Hidden"/>
                    </MultiTrigger>

                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsChecked" Value="false"></Condition>
                            <Condition Property="IsEnabled" Value="true"></Condition>
                        </MultiTrigger.Conditions>

                        <Setter TargetName="imgUncheck" Property="Visibility" Value="Visible"/>
                        <Setter TargetName="imgCheckDisable" Property="Visibility" Value="Hidden"/>
                        <Setter TargetName="imgUncheckDisable" Property="Visibility" Value="Hidden"/>
                    </MultiTrigger>

                    <Trigger  Property="IsFocused" Value="True">
                        <Setter Property="FocusVisualStyle">
                            <Setter.Value>
                                <Style>
                                    <Setter Property="Control.Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <Rectangle Margin="-1,0,-3,0" StrokeThickness="1" Stroke="Black" StrokeDashArray="1 2"/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Setter.Value>
                        </Setter>
                    </Trigger>


                </ControlTemplate.Triggers>
            </ControlTemplate>
        </ResourceDictionary>
    </Window.Resources>

    <Viewbox Stretch="Fill">
        <Grid>
            <Rectangle Fill="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"  
                                    RadiusX="5" RadiusY="5">
                <Rectangle.Effect>
                    <DropShadowEffect BlurRadius="24" Color="#FF858484" Direction="90" ShadowDepth="3"/>
                </Rectangle.Effect>
            </Rectangle>
            <Grid x:Name="LayoutRoot" Width="537" Height="545" >
                <Grid.Background>
                    <ImageBrush ImageSource="../../Images/popup_gnd_quick scan.png" Stretch="None"></ImageBrush>
                </Grid.Background>
                <Grid.RowDefinitions>
                    <RowDefinition Height="30" />
                    <RowDefinition Height="100" />
                    <RowDefinition Height="240" />
                    <RowDefinition Height="100" />
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <!-- Title bar begin -->
                <Border Name="TitleBar"  Background="Transparent" Grid.Row="0">
                    <TextBlock Text="{StaticResource ResStr_Faroe_scan_setting1}" FontSize="15" Foreground="#FF000000" HorizontalAlignment="Center" VerticalAlignment="Center" />
                </Border>

                <local:MinimizeCloseButton Width="30" HorizontalAlignment="Right"  Grid.Row="0" MinimizeOrCloseStyle="Close" Click="ControlBtnClick" IsCancel="True" PreviewKeyDown="btnClose_PreviewKeyDown"/>
                <!-- Title bar end -->
               
                <local:GroupBoxDecorator Grid.Row="1" Header="{StaticResource ResStr_Faroe_ADF}" HorizontalAlignment="Left"
                                         VerticalAlignment="Center" Width="220" Height="75" Margin="30,0,0,0" >
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="20" />
                            <ColumnDefinition Width="90" />
                            <ColumnDefinition Width="90" />
                            <ColumnDefinition Width="20" />
                        </Grid.ColumnDefinitions>

                        <RadioButton GroupName="ADFMode" IsChecked="true"
                    Grid.Column="1"
                    HorizontalAlignment="Center"
                    Name="twoSideButton" Click="ADFMode_click"
                    Template="{StaticResource customRadioButton}"
                    Content="{StaticResource ResStr_Faroe_2side}" VerticalAlignment="Center" ></RadioButton>

                        <RadioButton GroupName="ADFMode" IsChecked="false"
                    Grid.Column="2"
                    HorizontalAlignment="Center"
                    Name="oneSideButton" Click="ADFMode_click"
                    Template="{StaticResource customRadioButton}"
                    Content="{StaticResource ResStr_Faroe_1side}" VerticalAlignment="Center" ></RadioButton>

                    </Grid>
                </local:GroupBoxDecorator>

                <local:GroupBoxDecorator Grid.Row="1" Margin="0,0,30,0" Header="{StaticResource ResStr_Color_Mode}" Height="80" Width="220" HorizontalAlignment="Right" VerticalAlignment="Center">
                    <Grid Margin="0,0,0,5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="30" />
                            <ColumnDefinition Width="65" />
                            <ColumnDefinition Width="65" />
                            <ColumnDefinition Width="30" />
                        </Grid.ColumnDefinitions>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="2" />
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                        <RadioButton GroupName="colorMode"  
                            IsChecked="True"
					        Checked="colorMode_Click"
                            Grid.Row="1" Grid.Column="1"
					        Cursor="Hand" 
					        x:Name="Color" 
					        Template="{StaticResource colorRadioButton}"
                            ToolTip="{StaticResource ResStr_Color}"
                            Width="60"
                            Height="38">
                            <!--<RadioButton.BorderBrush>
                                <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ControlDarkDarkColorKey}}"/>
                            </RadioButton.BorderBrush>
                            <Image Stretch="None" Source="../../Images/Color.png" />-->
                        </RadioButton>

                        <RadioButton GroupName="colorMode"  
                            IsChecked="False"
					        Checked="colorMode_Click"
                            Grid.Row="1" Grid.Column="2"
					        Cursor="Hand" 
					        x:Name="Grayscale" 
                            Template="{StaticResource grayRadioButton}"
                            ToolTip="{StaticResource ResStr_Grayscale}"
                            Width="60"
                            Height="38">
                            <!--<RadioButton.BorderBrush>
                                <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ControlDarkDarkColorKey}}"/>
                            </RadioButton.BorderBrush>
                            <Image Stretch="None" Source="../../Images/Grayscale.png" />-->
                        </RadioButton>
                    </Grid>
                </local:GroupBoxDecorator>

                <Grid Grid.Row="2" >
                    <local:GroupBoxDecorator Margin="30,0,0,0" Header="{StaticResource ResStr_DPI}" Height="65" 
                                             Width="220" HorizontalAlignment="Left" VerticalAlignment="Top" >
                        <ComboBox Name="cboScanResln" SelectionChanged="combo_sel_change"
                            Style="{StaticResource customComboBox}"
                            Background="White"
                            Width="145" Height="24"
                            VerticalAlignment="Center" Margin="38,4,37,9">
                        </ComboBox>
                    </local:GroupBoxDecorator>                  

                    <!-- Right side -->
                    <local:GroupBoxDecorator Margin="0,0,30,0" Header="{StaticResource ResStr_Contrast}" Height="115" HorizontalAlignment="Right" VerticalAlignment="Top" Width="220" >
                        <StackPanel>
                            <Image Stretch="None" VerticalAlignment="Top"
                        Margin="0,5" Source="../../Images/Constrast.png" />
                            <Slider HorizontalAlignment="Center"  Minimum="0" Name="sldr_contrast" ValueChanged="sldr_value_change"
                        Maximum="100" Value="50" Height="18" Width="154" Template="{StaticResource HorizontalSlider}"/>

                            <local:SpinnerControl x:Name="spinCtlConstrast" Style="{StaticResource SpinnerControl1}"
                        Width="210" 
                        Background="Transparent"
                        Change="1"
                        DecimalPlaces="0"
                        Maximum="100"
                        Minimum="0"                          
                        Value="{Binding ElementName=sldr_contrast, Path=Value}"
                        IsPercentFormat="False"
                        ValidationHasErrorChanged="OnValidationHasErrorChanged"
                        LostFocus="SpinnerTextBox_LostFocus">
                            </local:SpinnerControl>

                        </StackPanel>
                    </local:GroupBoxDecorator>
                    <local:GroupBoxDecorator  Margin="30,78,0,82" Header="{StaticResource ResStr_Type}" Height="75" 
                                              Width="220" HorizontalAlignment="Left" VerticalAlignment="Center" >
                        <ComboBox Name="cboMediaType" SelectionChanged="comboType_sel_change"
                            Style="{StaticResource customComboBox}"
                            Background="White"
                            Width="145" Height="24"
                            VerticalAlignment="Center" Margin="38,4,37,9"
                            >
                        </ComboBox>
                    </local:GroupBoxDecorator>

                    <local:GroupBoxDecorator Margin="30,0,0,0" Header="{StaticResource ResStr_Scan_Size}" Height="70" 
                                             HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="220" >
                        <ComboBox Name="cboScanSize" SelectionChanged="cbo_selchg_scansize"
                    Style="{StaticResource customComboBox}"
                    Background="White"
                    Width="145" Height="25"
                    VerticalAlignment="Center"
                    >
                        </ComboBox>
                    </local:GroupBoxDecorator>
                    <local:GroupBoxDecorator Margin="0,0,30,0" Header="{StaticResource ResStr_Brightness}" Height="115" 
                                             Width="220" HorizontalAlignment="Right" VerticalAlignment="Bottom" >
                        <StackPanel>
                            <Image Stretch="None" VerticalAlignment="Top"
                        Margin="0,5" Source="../../Images/Brightness.png" />
                            <Slider HorizontalAlignment="Center"  Minimum="0" Name="sldr_brightness" ValueChanged="sldr_value_change"
                        Maximum="100" Value="50" Height="18" Width="154" Template="{StaticResource HorizontalSlider}"/>

                            <local:SpinnerControl x:Name="spinCtlBrightness" Style="{StaticResource SpinnerControl1}"
                        Width="210" 
                        Background="Transparent"
                        Change="1"
                        DecimalPlaces="0"
                        Maximum="100"
                        Minimum="0"  
                        Value="{Binding ElementName=sldr_brightness, Path=Value}"
                        IsPercentFormat="False"
                        ValidationHasErrorChanged="OnValidationHasErrorChanged"
                        LostFocus="SpinnerTextBox_LostFocus">
                            </local:SpinnerControl>

                        </StackPanel>
                    </local:GroupBoxDecorator>
                </Grid>

                <Grid Grid.Row="3">
                    <local:GroupBoxDecorator Header="{StaticResource ResStr_Faroe_multifeed}" HorizontalAlignment="Left"
                                             VerticalAlignment="Center" Width="220" Height="75" Margin="30,0,0,0">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20" />
                                <ColumnDefinition Width="90" />
                                <ColumnDefinition Width="90" />
                                <ColumnDefinition Width="20" />
                            </Grid.ColumnDefinitions>

                            <RadioButton GroupName="MultiFeed" IsChecked="true"
                                Grid.Column="1"
                                HorizontalAlignment="Center"
                                Name="MultiFeedOnButton" Click="MultiFeed_click"
                                Template="{StaticResource customRadioButton}"
                                Content="{StaticResource ResStr_On}" VerticalAlignment="Center" >
                            </RadioButton>

                            <RadioButton GroupName="MultiFeed" IsChecked="false"
                                Grid.Column="2"
                                HorizontalAlignment="Center"
                                Name="MultiFeedOffButton" Click="MultiFeed_click"
                                Template="{StaticResource customRadioButton}"
                                Content="{StaticResource ResStr_Off}" VerticalAlignment="Center" >
                            </RadioButton>

                        </Grid>

                    </local:GroupBoxDecorator>

                    <local:GroupBoxDecorator Header="{StaticResource ResStr_Faroe_autocrop}" 
                         HorizontalAlignment="Right"  VerticalAlignment="Center" Width="220" Height="75" Margin="0,0,30,0">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20" />
                                <ColumnDefinition Width="90" />
                                <ColumnDefinition Width="90" />
                                <ColumnDefinition Width="20" />
                            </Grid.ColumnDefinitions>

                            <RadioButton GroupName="AutoCrop" IsChecked="true"
                                Grid.Column="1"
                                HorizontalAlignment="Center"
                                Name="AutoCropOnButton" Click="AutoCrop_click"
                                Template="{StaticResource customRadioButton}"
                                Content="{StaticResource ResStr_On}" VerticalAlignment="Center" >
                            </RadioButton>

                            <RadioButton GroupName="AutoCrop" IsChecked="false"
                                Grid.Column="2"
                                HorizontalAlignment="Center"
                                Name="AutoCropOffButton" Click="AutoCrop_click"
                                Template="{StaticResource customRadioButton}"
                                Content="{StaticResource ResStr_Off}" VerticalAlignment="Center" >
                            </RadioButton>

                        </Grid>

                    </local:GroupBoxDecorator>
                </Grid>

                <StackPanel Grid.Row="4" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Button HorizontalContentAlignment="Center" IsDefault="False" x:Name="btnDefault" Click="btnDefault_Click"
                Content="{StaticResource ResStr_Default}" Style="{StaticResource CustomPopUpButtonStyle}"
                Height="35" Width="150" Margin="0,0,20,0" />
                    <Button HorizontalContentAlignment="Center" x:Name="btnOk" Click="btnOk_Click"
                Content="{StaticResource ResStr_OK}"  Height="35" Width="150" 
                            Style="{StaticResource CustomPopUpButtonStyle}"/>
                </StackPanel>

            </Grid>
        </Grid>
    </Viewbox>
</Window>
