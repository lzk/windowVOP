<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:btl="clr-namespace:VOP.Controls"
                    xmlns:local="clr-namespace:VOP.Controls"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006">


    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../TextBoxValidation/ValidationTemplate.xaml"/>
    </ResourceDictionary.MergedDictionaries>


    
    <LinearGradientBrush x:Key="PlusButtonStrokeNormal" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFF8F8F8" Offset="0"/>
                <GradientStop Color="#FF7C7C7C" Offset="1"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="PlusButtonFillNormal" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFE5E5E5" Offset="0"/>
                <GradientStop Color="#FFCCCCCC" Offset="1"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="PlusButtonContentNormal" Color="#FF838383" Opacity="1"/>

    <LinearGradientBrush x:Key="PlusButtonStrokePressed" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFCACACA" Offset="0"/>
                <GradientStop Color="#FF363636" Offset="1"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="PlusButtonFillPressed" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FF8D8D8D" Offset="0"/>
                <GradientStop Color="#FF4C4C4C" Offset="1"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    
    <SolidColorBrush x:Key="PlusButtonContentPressed" Color="White" Opacity="1"/>
    <SolidColorBrush x:Key="PlusButtonContentOver" Color="#FF0AAA0A" Opacity="1"/>

    <Style x:Key="SpinnerButtonFocus">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Ellipse Margin="-1" StrokeThickness="1" Stroke="Black" StrokeDashArray="2 1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CustomPlusButtonStyle"
       TargetType="{x:Type RepeatButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid>
                        <Ellipse Name="innerEllipse" StrokeThickness="2" Fill="{StaticResource PlusButtonFillNormal}" Stroke="{StaticResource PlusButtonStrokeNormal}"/>
                        <Path Name="innerShape" StrokeThickness="2"  Margin="6" Data="M0.5,5.5 L10.5,5.5 M5.5,0.5 L5.5,10.5"  Stretch="Fill" Stroke="{StaticResource PlusButtonContentNormal}"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="innerEllipse" Property="Stroke" Value="{StaticResource PlusButtonStrokePressed}" />
                            <Setter TargetName="innerEllipse" Property="Fill" Value="{StaticResource PlusButtonFillPressed}" />
                            <Setter TargetName="innerShape" Property="Stroke" Value="{StaticResource PlusButtonContentPressed}" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true"/>
                                <Condition Property="IsPressed" Value="false"/>
                            </MultiTrigger.Conditions>

                            <Setter TargetName="innerEllipse" Property="Stroke" Value="{StaticResource PlusButtonStrokeNormal}" />
                            <Setter TargetName="innerEllipse" Property="Fill" Value="{StaticResource PlusButtonFillNormal}" />
                            <Setter TargetName="innerShape" Property="Stroke" Value="{StaticResource PlusButtonContentOver}" />
                        </MultiTrigger>

                        <Trigger  Property="IsFocused" Value="True">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource SpinnerButtonFocus}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="CustomMinusButtonStyle"
       TargetType="{x:Type RepeatButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid>
                        <Ellipse Name="innerEllipse" StrokeThickness="2" Fill="{StaticResource PlusButtonFillNormal}" Stroke="{StaticResource PlusButtonStrokeNormal}"/>
                        <Path Name="innerShape" StrokeThickness="2" Margin="7" Data="M379.5,294.5 L389.5,294.5" Stretch="Fill" Stroke="{StaticResource PlusButtonContentNormal}"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="innerEllipse" Property="Stroke" Value="{StaticResource PlusButtonStrokePressed}" />
                            <Setter TargetName="innerEllipse" Property="Fill" Value="{StaticResource PlusButtonFillPressed}" />
                            <Setter TargetName="innerShape" Property="Stroke" Value="{StaticResource PlusButtonContentPressed}" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true"/>
                                <Condition Property="IsPressed" Value="false"/>
                            </MultiTrigger.Conditions>

                            <Setter TargetName="innerEllipse" Property="Stroke" Value="{StaticResource PlusButtonStrokeNormal}" />
                            <Setter TargetName="innerEllipse" Property="Fill" Value="{StaticResource PlusButtonFillNormal}" />
                            <Setter TargetName="innerShape" Property="Stroke" Value="{StaticResource PlusButtonContentOver}" />
                        </MultiTrigger>

                        <Trigger  Property="IsFocused" Value="True">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource SpinnerButtonFocus}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <LinearGradientBrush x:Key="TextBoxBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="Silver" Offset="0"/>
                <GradientStop Color="#FFC3C3C3" Offset="1"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="TextBoxBackground" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFE8E8E8" Offset="0"/>
                <GradientStop Color="#FFCBCBCB" Offset="1"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <Style x:Key="CustomTextBoxStyle"
       TargetType="{x:Type TextBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border CornerRadius="2"/>                         
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--<Style x:Key="SpinnerTextBoxFocus">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="-0.5" RadiusX="5" RadiusY="5" StrokeThickness="0" Stroke="Black" StrokeDashArray="1 3" StrokeDashCap="Square" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->
    
    <Style TargetType="{x:Type btl:SpinnerControl}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type btl:SpinnerControl}">

                    <Grid Background="{Binding Path=Background, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <!--
                            we use the TemplatedParent binding to get a reference to the control
                            this template has been applied to, so we can access the property on it
                        -->

                        <RepeatButton Name="btnDecrease"
                                      Grid.Row="0"
                                      Grid.Column="0"
                                      Width="25"
                                      Height="25"
                                      Style="{StaticResource CustomMinusButtonStyle}" 
                                      Command="{x:Static btl:SpinnerControl.DecreaseCommand}"/>

                        <Border   Grid.Row="0"
                                  Grid.Column="1"
                                  BorderBrush="{StaticResource TextBoxBorderBrush}" BorderThickness="2.5" >
                            <TextBox Name="tbTextBox"   
                                 Background="{StaticResource TextBoxBackground}" 
                                 Foreground="#FF707070"
                                 TextAlignment="Center"
                                 Padding="5"
                                 IsReadOnly="False"
                                 FontSize="26" 
                                 MaxLength="3"
                                 BorderThickness="0"
                                 InputMethod.IsInputMethodEnabled="False"
                                 >
                                <TextBox.InputBindings>
                                    <KeyBinding Command="NotACommand" Gesture="Ctrl+V"/>
                                </TextBox.InputBindings>
                                <TextBox.Text>
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                         Mode="TwoWay"
                                         Path="FormattedValue" 
                                         UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <local:PrintCopysValidationRule MinimumValue="1" MaximumValue="99" 
										 />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                        </Border>
                       

                        <RepeatButton Name="btnIncrease"
                                      Grid.Row="0"
                                      Grid.Column="2"
                                      Width="25"
                                      Height="25"
                                      Style="{StaticResource CustomPlusButtonStyle}" 
                                      Command="{x:Static btl:SpinnerControl.IncreaseCommand}"/>



                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="tbTextBox" Property="Validation.HasError"  Value="true">
                            <Setter Property="ValidationHasError" Value="True"></Setter>
                            <Setter TargetName="btnDecrease" Property="IsEnabled" Value="False"></Setter>
                            <Setter TargetName="btnIncrease" Property="IsEnabled" Value="False"></Setter>
                        </Trigger>

                        <Trigger SourceName="tbTextBox"  Property="Validation.HasError" Value="False">
                            <Setter Property="ValidationHasError" Value="False"></Setter>
                            <Setter TargetName="btnDecrease" Property="IsEnabled" Value="true"></Setter>
                            <Setter TargetName="btnIncrease" Property="IsEnabled" Value="true"></Setter>
                        </Trigger>

                        <!--<Trigger SourceName="tbTextBox" Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}"/>
                        </Trigger>-->
                     
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PrintSettingSpinnerStyle" TargetType="{x:Type btl:SpinnerControl}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type btl:SpinnerControl}">

                    <Grid Background="{Binding Path=Background, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <RepeatButton 
                                      Name="btnDecrease"
                                      Grid.Row="0"
                                      Grid.Column="0"
                                      Width="25"
                                      Height="25"
                                      Style="{StaticResource CustomMinusButtonStyle}" 
                                      Command="{x:Static btl:SpinnerControl.DecreaseCommand}"/>

                        <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal">
                            <TextBox 
                                 Name="tbTextBox"
                                 Width="55"
                                 Foreground="#FF707070"
                                 TextAlignment="Center"
                                 Background="Transparent"
                                 Padding="0,2,0,2"
                                 IsReadOnly="False"
                                 FontSize="26" 
                                 Style="{StaticResource TextBoxErrorTemplateStyle}" 
                                 BorderThickness="0"
                                 BorderBrush="{x:Null}"
                                 MaxLength="4"
                                 InputMethod.IsInputMethodEnabled="False">
                                <TextBox.InputBindings>
                                    <KeyBinding Command="NotACommand" Gesture="Ctrl+V"/>
                                </TextBox.InputBindings>
                                <TextBox.Text>
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" 
                                         Mode="TwoWay"
                                         Path="FormattedValue" 
                                         UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <local:PrintCopysValidationRule MinimumValue="25" MaximumValue="400" 
										ErrorMessage="{StaticResource ResStr_The_valid_range_is_25_400__please_confirm_and_enter_again_}" />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                            <TextBlock x:Name="percentMark" Foreground="#FF707070" FontSize="26" Text="%" VerticalAlignment="Center" Margin="3,0,0,0"/>
                        </StackPanel>
                       



                        <RepeatButton 
                                      Name="btnIncrease"
                                      Grid.Row="0"
                                      Grid.Column="2"
                                      Width="25"
                                      Height="25"
                                      Style="{StaticResource CustomPlusButtonStyle}" 
                                      Command="{x:Static btl:SpinnerControl.IncreaseCommand}"/>



                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="tbTextBox" Property="Validation.HasError"  Value="true">
                            <Setter Property="ValidationHasError" Value="True"></Setter>
                            <Setter TargetName="btnDecrease" Property="IsEnabled" Value="False"></Setter>
                            <Setter TargetName="btnIncrease" Property="IsEnabled" Value="False"></Setter>
                        </Trigger>

                        <Trigger SourceName="tbTextBox"  Property="Validation.HasError" Value="False">
                            <Setter Property="ValidationHasError" Value="False"></Setter>
                            <Setter TargetName="btnDecrease" Property="IsEnabled" Value="true"></Setter>
                            <Setter TargetName="btnIncrease" Property="IsEnabled" Value="true"></Setter>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="tbTextBox" Property="Foreground" Value="#7F6D6D6D"/>
                            <Setter TargetName="percentMark" Property="Foreground" Value="#7F6D6D6D"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="SpinnerBarOn" Color="#FF48A800" Opacity="1"/>
    <SolidColorBrush x:Key="SpinnerBarOff" Color="#FFB5DC99" Opacity="1"/>
    
    <Style x:Key="PrintSettingSpinnerBarStyle" TargetType="{x:Type btl:SpinnerControl}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type btl:SpinnerControl}">

                    <Grid Background="{Binding Path=Background, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <StackPanel Grid.Column="1" Orientation="Horizontal">
                            <Rectangle Name="Rec1" Fill="{StaticResource SpinnerBarOff}" Width="8" Height="6" Margin="6,0,0,0" VerticalAlignment="Bottom"/>
                            <Rectangle Name="Rec2" Fill="{StaticResource SpinnerBarOff}" Width="8" Height="9" Margin="3,0,0,0" VerticalAlignment="Bottom"/>
                            <Rectangle Name="Rec3" Fill="{StaticResource SpinnerBarOff}" Width="8" Height="12" Margin="3,0,0,0" VerticalAlignment="Bottom"/>
                            <Rectangle Name="Rec4" Fill="{StaticResource SpinnerBarOff}" Width="8" Height="15" Margin="3,0,0,0" VerticalAlignment="Bottom"/>
                            <Rectangle Name="Rec5" Fill="{StaticResource SpinnerBarOff}" Width="8" Height="18" Margin="3,0,0,0" VerticalAlignment="Bottom"/>
                            <Rectangle Name="Rec6" Fill="{StaticResource SpinnerBarOff}" Width="8" Height="21" Margin="3,0,0,0" VerticalAlignment="Bottom"/>
                            <Rectangle Name="Rec7" Fill="{StaticResource SpinnerBarOff}" Width="8" Height="24" Margin="3,0,0,0" VerticalAlignment="Bottom"/>
                        </StackPanel>

                        <RepeatButton Grid.Row="0"
                                      Grid.Column="0"
                                      Width="25"
                                      Height="25"
                                      Style="{StaticResource CustomMinusButtonStyle}" 
                                      Command="{x:Static btl:SpinnerControl.DecreaseCommand}"/>


                        <RepeatButton Grid.Row="0"
                                      Grid.Column="2"
                                      Width="25"
                                      Height="25"
                                      Style="{StaticResource CustomPlusButtonStyle}" 
                                      Command="{x:Static btl:SpinnerControl.IncreaseCommand}"/>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Value" Value="1">
                            <Setter TargetName="Rec1" Property="Fill" Value="{StaticResource SpinnerBarOn}" />
                            <Setter TargetName="Rec2" Property="Fill" Value="{StaticResource SpinnerBarOff}" />
                            <Setter TargetName="Rec3" Property="Fill" Value="{StaticResource SpinnerBarOff}" />
                            <Setter TargetName="Rec4" Property="Fill" Value="{StaticResource SpinnerBarOff}" />
                            <Setter TargetName="Rec5" Property="Fill" Value="{StaticResource SpinnerBarOff}" />
                            <Setter TargetName="Rec6" Property="Fill" Value="{StaticResource SpinnerBarOff}" />
                            <Setter TargetName="Rec7" Property="Fill" Value="{StaticResource SpinnerBarOff}" />
                        </Trigger>
                        <Trigger Property="Value" Value="2">
                            <Setter TargetName="Rec1" Property="Fill" Value="{StaticResource SpinnerBarOn}" />
                            <Setter TargetName="Rec2" Property="Fill" Value="{StaticResource SpinnerBarOn}" />
                            <Setter TargetName="Rec3" Property="Fill" Value="{StaticResource SpinnerBarOff}" />
                            <Setter TargetName="Rec4" Property="Fill" Value="{StaticResource SpinnerBarOff}" />
                            <Setter TargetName="Rec5" Property="Fill" Value="{StaticResource SpinnerBarOff}" />
                            <Setter TargetName="Rec6" Property="Fill" Value="{StaticResource SpinnerBarOff}" />
                            <Setter TargetName="Rec7" Property="Fill" Value="{StaticResource SpinnerBarOff}" />
                        </Trigger>
                        <Trigger Property="Value" Value="3">
                            <Setter TargetName="Rec1" Property="Fill" Value="{StaticResource SpinnerBarOn}" />
                            <Setter TargetName="Rec2" Property="Fill" Value="{StaticResource SpinnerBarOn}" />
                            <Setter TargetName="Rec3" Property="Fill" Value="{StaticResource SpinnerBarOn}" />
                            <Setter TargetName="Rec4" Property="Fill" Value="{StaticResource SpinnerBarOff}" />
                            <Setter TargetName="Rec5" Property="Fill" Value="{StaticResource SpinnerBarOff}" />
                            <Setter TargetName="Rec6" Property="Fill" Value="{StaticResource SpinnerBarOff}" />
                            <Setter TargetName="Rec7" Property="Fill" Value="{StaticResource SpinnerBarOff}" />
                        </Trigger>
                        <Trigger Property="Value" Value="4">
                            <Setter TargetName="Rec1" Property="Fill" Value="{StaticResource SpinnerBarOn}" />
                            <Setter TargetName="Rec2" Property="Fill" Value="{StaticResource SpinnerBarOn}" />
                            <Setter TargetName="Rec3" Property="Fill" Value="{StaticResource SpinnerBarOn}" />
                            <Setter TargetName="Rec4" Property="Fill" Value="{StaticResource SpinnerBarOn}" />
                            <Setter TargetName="Rec5" Property="Fill" Value="{StaticResource SpinnerBarOff}" />
                            <Setter TargetName="Rec6" Property="Fill" Value="{StaticResource SpinnerBarOff}" />
                            <Setter TargetName="Rec7" Property="Fill" Value="{StaticResource SpinnerBarOff}" />
                        </Trigger>
                        <Trigger Property="Value" Value="5">
                            <Setter TargetName="Rec1" Property="Fill" Value="{StaticResource SpinnerBarOn}" />
                            <Setter TargetName="Rec2" Property="Fill" Value="{StaticResource SpinnerBarOn}" />
                            <Setter TargetName="Rec3" Property="Fill" Value="{StaticResource SpinnerBarOn}" />
                            <Setter TargetName="Rec4" Property="Fill" Value="{StaticResource SpinnerBarOn}" />
                            <Setter TargetName="Rec5" Property="Fill" Value="{StaticResource SpinnerBarOn}" />
                            <Setter TargetName="Rec6" Property="Fill" Value="{StaticResource SpinnerBarOff}" />
                            <Setter TargetName="Rec7" Property="Fill" Value="{StaticResource SpinnerBarOff}" />
                        </Trigger>
                        <Trigger Property="Value" Value="6">
                            <Setter TargetName="Rec1" Property="Fill" Value="{StaticResource SpinnerBarOn}" />
                            <Setter TargetName="Rec2" Property="Fill" Value="{StaticResource SpinnerBarOn}" />
                            <Setter TargetName="Rec3" Property="Fill" Value="{StaticResource SpinnerBarOn}" />
                            <Setter TargetName="Rec4" Property="Fill" Value="{StaticResource SpinnerBarOn}" />
                            <Setter TargetName="Rec5" Property="Fill" Value="{StaticResource SpinnerBarOn}" />
                            <Setter TargetName="Rec6" Property="Fill" Value="{StaticResource SpinnerBarOn}" />
                            <Setter TargetName="Rec7" Property="Fill" Value="{StaticResource SpinnerBarOff}" />
                        </Trigger>
                        <Trigger Property="Value" Value="7">
                            <Setter TargetName="Rec1" Property="Fill" Value="{StaticResource SpinnerBarOn}" />
                            <Setter TargetName="Rec2" Property="Fill" Value="{StaticResource SpinnerBarOn}" />
                            <Setter TargetName="Rec3" Property="Fill" Value="{StaticResource SpinnerBarOn}" />
                            <Setter TargetName="Rec4" Property="Fill" Value="{StaticResource SpinnerBarOn}" />
                            <Setter TargetName="Rec5" Property="Fill" Value="{StaticResource SpinnerBarOn}" />
                            <Setter TargetName="Rec6" Property="Fill" Value="{StaticResource SpinnerBarOn}" />
                            <Setter TargetName="Rec7" Property="Fill" Value="{StaticResource SpinnerBarOn}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="SpinnerCtrl" TargetType="{x:Type btl:SpinnerControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type btl:SpinnerControl}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="2"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <TextBox Name="tbTextBox" 
                                 Grid.Row="0" 
                                 Grid.Column="0" 
                                 Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FormattedValue, Mode=TwoWay}"
                                 IsReadOnly="True"
                                 InputMethod.IsInputMethodEnabled="False"
                                 FontSize="18">
                            <TextBox.InputBindings>
                                <KeyBinding Command="NotACommand" Gesture="Ctrl+V"/>
                            </TextBox.InputBindings>
                        </TextBox>
                        <Grid Grid.Column="1" >
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <RepeatButton Grid.Row="0" Grid.Column="1" Command="{x:Static btl:SpinnerControl.IncreaseCommand}">
                                <RepeatButton.Content>
                                    <Path 
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Center"
                                    x:Name="BtnArrow2" Height="8" Width="8" 
                                    Stretch="Uniform"
                                    Fill="#ff818181"                                    
                                    Data="F1 M 300,-183L 310,-183L 305,-190L
                                    301,-183 Z " />
                                </RepeatButton.Content>
                            </RepeatButton>
                            
                            <RepeatButton Grid.Row="1" Grid.Column="1" Command="{x:Static btl:SpinnerControl.DecreaseCommand}">
                                <RepeatButton.Content>
                                    <Path 
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Center"
                                    x:Name="BtnArrow" Height="8" Width="8" 
                                    Stretch="Uniform" 
                                    Fill="#ff818181"
                                    Data="F1 M 300,-190L 310,-190L 305,-183L 301,-190 Z " />
                                </RepeatButton.Content>
                            </RepeatButton>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
<!--  Resource dictionary entries should be defined here.  -->
</ResourceDictionary>