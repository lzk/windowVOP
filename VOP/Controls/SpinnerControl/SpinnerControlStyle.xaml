<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:btl="clr-namespace:VOP.Controls"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006">

    <LinearGradientBrush x:Key="PlusButtonStrokeNormal" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFF8F8F8" Offset="0"/>
                <GradientStop Color="#FF7C7C7C" Offset="1"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="PlusButtonFillNormal" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFE5E5E5" Offset="0"/>
                <GradientStop Color="#FFCCCCCC" Offset="1"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="PlusButtonContentNormal" Color="#FF838383" Opacity="1"/>

    <LinearGradientBrush x:Key="PlusButtonStrokePressed" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFCACACA" Offset="0"/>
                <GradientStop Color="#FF363636" Offset="1"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="PlusButtonFillPressed" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FF8D8D8D" Offset="0"/>
                <GradientStop Color="#FF4C4C4C" Offset="1"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    
    <SolidColorBrush x:Key="PlusButtonContentPressed" Color="White" Opacity="1"/>


    <Style x:Key="CustomPlusButtonStyle"
       TargetType="{x:Type RepeatButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid>
                        <Ellipse Name="innerEllipse" StrokeThickness="2" Fill="{StaticResource PlusButtonFillNormal}" Stroke="{StaticResource PlusButtonStrokeNormal}"/>
                        <Path Name="innerShape" StrokeThickness="2"  Margin="6" Data="M0.5,5.5 L10.5,5.5 M5.5,0.5 L5.5,10.5"  Stretch="Fill" Stroke="{StaticResource PlusButtonContentNormal}"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="innerEllipse" Property="Stroke" Value="{StaticResource PlusButtonStrokePressed}" />
                            <Setter TargetName="innerEllipse" Property="Fill" Value="{StaticResource PlusButtonFillPressed}" />
                            <Setter TargetName="innerShape" Property="Stroke" Value="{StaticResource PlusButtonContentPressed}" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true"/>
                                <Condition Property="IsPressed" Value="false"/>
                            </MultiTrigger.Conditions>

                            <Setter TargetName="innerEllipse" Property="Stroke" Value="{StaticResource PlusButtonStrokeNormal}" />
                            <Setter TargetName="innerEllipse" Property="Fill" Value="{StaticResource PlusButtonFillNormal}" />
                            <Setter TargetName="innerShape" Property="Stroke" Value="{StaticResource PlusButtonContentNormal}" />
                        </MultiTrigger>

                      
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CustomMinusButtonStyle"
       TargetType="{x:Type RepeatButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid>
                        <Ellipse Name="innerEllipse" StrokeThickness="2" Fill="{StaticResource PlusButtonFillNormal}" Stroke="{StaticResource PlusButtonStrokeNormal}"/>
                        <Path Name="innerShape" StrokeThickness="2" Margin="7" Data="M379.5,294.5 L389.5,294.5" Stretch="Fill" Stroke="{StaticResource PlusButtonContentNormal}"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="innerEllipse" Property="Stroke" Value="{StaticResource PlusButtonStrokePressed}" />
                            <Setter TargetName="innerEllipse" Property="Fill" Value="{StaticResource PlusButtonFillPressed}" />
                            <Setter TargetName="innerShape" Property="Stroke" Value="{StaticResource PlusButtonContentPressed}" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true"/>
                                <Condition Property="IsPressed" Value="false"/>
                            </MultiTrigger.Conditions>

                            <Setter TargetName="innerEllipse" Property="Stroke" Value="{StaticResource PlusButtonStrokeNormal}" />
                            <Setter TargetName="innerEllipse" Property="Fill" Value="{StaticResource PlusButtonFillNormal}" />
                            <Setter TargetName="innerShape" Property="Stroke" Value="{StaticResource PlusButtonContentNormal}" />
                        </MultiTrigger>


                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <LinearGradientBrush x:Key="TextBoxBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="Silver" Offset="0"/>
                <GradientStop Color="#FFC3C3C3" Offset="1"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="TextBoxBackground" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFE8E8E8" Offset="0"/>
                <GradientStop Color="#FFCBCBCB" Offset="1"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <Style x:Key="CustomTextBoxStyle"
       TargetType="{x:Type TextBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border CornerRadius="2"/>                         
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type btl:SpinnerControl}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type btl:SpinnerControl}">

                    <Grid Background="{Binding Path=Background, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <!--
                            we use the TemplatedParent binding to get a reference to the control
                            this template has been applied to, so we can access the property on it
                        -->
                        <TextBox Grid.Row="0"
                                 Grid.Column="1"
                                 Background="{StaticResource TextBoxBackground}" 
                                 BorderBrush="{StaticResource TextBoxBorderBrush}"
                                 Foreground="#FF707070"
                                 TextAlignment="Center"
                                 Padding="5"
                                 IsReadOnly="False"
                                 Text="{Binding RelativeSource={RelativeSource TemplatedParent},
                                                Path=FormattedValue,
                                                Mode=OneWay}"
                                 BorderThickness="2.5" 
                                 FontSize="26" />

                        <RepeatButton Grid.Row="0"
                                      Grid.Column="0"
                                      Width="25"
                                      Height="25"
                                      Style="{StaticResource CustomMinusButtonStyle}" 
                                      Command="{x:Static btl:SpinnerControl.DecreaseCommand}"/>


                        <RepeatButton Grid.Row="0"
                                      Grid.Column="2"
                                      Width="25"
                                      Height="25"
                                      Style="{StaticResource CustomPlusButtonStyle}" 
                                      Command="{x:Static btl:SpinnerControl.IncreaseCommand}"/>



                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  Resource dictionary entries should be defined here.  -->
</ResourceDictionary>