<Window x:Class="VOP.IDCardCopyConfirm"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:VOP.Controls"
        xmlns:gif="http://wpfanimatedgif.codeplex.com"
        Title="IDCardCopyConfirm" Height="660" Width="420"
        ShowInTaskbar="False" 
        AllowsTransparency="true"
        WindowStartupLocation="CenterOwner"
        ResizeMode="NoResize"
        WindowStyle="None" 
        BorderThickness="24"
        >
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Controls/CustomButton.xaml"/>
                <ResourceDictionary Source="Controls/CustomCheckBox.xaml"/>
                <ResourceDictionary Source="Controls/CustomTextBoxRes.xaml"/>
                <ResourceDictionary Source="Controls/CustomRadioButton.xaml"/>
                <ResourceDictionary Source="Controls/AdjustButton.xaml"/>
                <ResourceDictionary Source="Controls/CustomComboBox.xaml"/>
                <ResourceDictionary Source="Controls/CustomRadioButtonEx.xaml"/>
                <ResourceDictionary Source="Controls/SpinnerControl/SpinnerControlStyle.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="BtnStyleLeft" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle">
                    <Setter.Value>
                        <Style>
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Ellipse Margin="0" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>

                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Foreground" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                <Grid>
                                    <Image x:Name="icon" Height="34" Width="34" Stretch="Fill" Source="Images/AnimationControl/leftNormal.tif"/>
                                </Grid>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Source" TargetName="icon" Value="Images/AnimationControl/leftHover.tif"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Source" TargetName="icon" Value="Images/AnimationControl/leftPress.tif"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Source" TargetName="icon" Value="Images/AnimationControl/leftNormal.tif"/>
                                </Trigger>
                            </ControlTemplate.Triggers>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

            </Style>

            <Style x:Key="BtnStyleRight" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle">
                    <Setter.Value>
                        <Style>
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Ellipse Margin="0" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>

                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Foreground" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                <Grid>
                                    <Image x:Name="icon" Height="34" Width="34" Stretch="Fill" Source="Images/AnimationControl/rightNormal.tif"/>
                                </Grid>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Source" TargetName="icon" Value="Images/AnimationControl/rightHover.tif"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Source" TargetName="icon" Value="Images/AnimationControl/rightPress.tif"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Source" TargetName="icon" Value="Images/AnimationControl/rightNormal.tif"/>
                                </Trigger>
                            </ControlTemplate.Triggers>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

            </Style>


            <Style x:Key="BtnStylePlay" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle">
                    <Setter.Value>
                        <Style>
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Ellipse Margin="0" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>

                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Foreground" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                <Grid>
                                    <Image x:Name="icon" Height="45" Width="45" Stretch="Fill" Source="Images/AnimationControl/pauseNormal.tif"/>
                                </Grid>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Source" TargetName="icon" Value="Images/AnimationControl/pauseHover.tif"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Source" TargetName="icon" Value="Images/AnimationControl/pausePress.tif"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Source" TargetName="icon" Value="Images/AnimationControl/pauseNormal.tif"/>
                                </Trigger>
                            </ControlTemplate.Triggers>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

            </Style>

        </ResourceDictionary>
    </Window.Resources>

    <Window.Effect>
        <DropShadowEffect BlurRadius="24" Color="#FF858484" Direction="90" ShadowDepth="3"/>
    </Window.Effect>

    <Grid x:Name="LayoutRoot" Background="#FFE7E7E7">
        <Grid.RowDefinitions>
            <RowDefinition Height="30" />
            <RowDefinition Height="400" />
            <RowDefinition Height="47" />
            <RowDefinition Height="40" />
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Border Name="TitleBar"  Background="#FF203144" Grid.Row="0" >
            <TextBlock Text="{StaticResource ResStr_ID_Card_Copy}" FontSize="15" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" />
        </Border>

        <local:MinimizeCloseButton x:Name="btnClose" Width="30" HorizontalAlignment="Right" Grid.Row="0" MinimizeOrCloseStyle="Close" Click="btnClose_Click" />

        <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Center" >
            <Button x:Name="btnPrev"  Style="{DynamicResource BtnStyleLeft}" Click="btnPre_Click" Margin ="5,0" Content="Prev" />
            <Button x:Name="btnStart" Style="{DynamicResource BtnStylePlay}" Click="btnStart_Click" Margin ="5,0" Content="Start" />
            <Button x:Name="btnNext"  Style="{DynamicResource BtnStyleRight}" Click="btnNext_Click" Margin ="5,0" Content="Next" />
        </StackPanel>

        <CheckBox x:Name="chkPopupNextTime" Template="{StaticResource customCheckBox}" Grid.Row="3" IsChecked="false" VerticalAlignment="Center" Content="下次不再弹出些对话框" HorizontalAlignment="Center" Height="24" Checked="chkPopupNextTime_Checked" Unchecked="chkPopupNextTime_Unchecked" />

        <StackPanel Orientation="Horizontal" Grid.Row="4" HorizontalAlignment="Center" >
            <local:ButtonEx x:Name="btnOK"     IsActiveEx="True" Content="确定"  Width="120" Height="40" Margin="20,0" FontSize="16" HorizontalContentAlignment="Center" Click="btnOK_Click" />
            <local:ButtonEx x:Name="btnCancel" IsActiveEx="False"  Content="取消" Width="120" Height="40" Margin="20,0" FontSize="16" HorizontalContentAlignment="Center" Click="btnCancel_Click"/>
        </StackPanel>

        <Image x:Name="img" HorizontalAlignment="Left" Height="368" Margin="26,22,0,0" Grid.Row="1" VerticalAlignment="Top" Width="320"
            Stretch="Fill"
            gif:ImageBehavior.AnimatedSource="Media\IDCardCopy1_zh.gif"
            gif:ImageBehavior.RepeatBehavior="1x"
            gif:ImageBehavior.AutoStart="True" 
            gif:ImageBehavior.AnimationCompleted="AnimationCompleted" />

    </Grid>
</Window>
