<Window x:Class="VOP.MessageBoxEx_Video"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="MessageBoxEx_Video" 
        Height="540"
        Width="478"      
        xmlns:local="clr-namespace:VOP.Controls"
        xmlns:mycontrol="clr-namespace:VOP" 
        ShowInTaskbar="False"
        VerticalAlignment="Center"
        WindowStartupLocation="CenterOwner" 
        Style="{StaticResource for_noresize_window}">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Controls/CustomButton.xaml"/>
                <ResourceDictionary Source="Controls/CustomCheckBox.xaml"/>
                <ResourceDictionary Source="Controls/CustomTextBoxRes.xaml"/>
                <ResourceDictionary Source="Controls/CustomRadioButton.xaml"/>
                <ResourceDictionary Source="Controls/AdjustButton.xaml"/>
                <ResourceDictionary Source="Controls/CustomComboBox.xaml"/>
                <ResourceDictionary Source="Controls/CustomRadioButtonEx.xaml"/>
                <ResourceDictionary Source="Controls/SpinnerControl/SpinnerControlStyle.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="BtnStyleLeft" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle">
                    <Setter.Value>
                        <Style>
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Ellipse Margin="0" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>

                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Foreground" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                <Grid>
                                    <Image x:Name="icon" Height="34" Width="34" Stretch="Fill" Source="Images/AnimationControl/leftNormal.tif"/>
                                </Grid>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Source" TargetName="icon" Value="Images/AnimationControl/leftHover.tif"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Source" TargetName="icon" Value="Images/AnimationControl/leftPress.tif"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Source" TargetName="icon" Value="Images/AnimationControl/leftDisable.tif"/>
                                </Trigger>
                            </ControlTemplate.Triggers>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

            </Style>

            <Style x:Key="BtnStyleRight" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle">
                    <Setter.Value>
                        <Style>
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Ellipse Margin="0" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>

                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Foreground" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                <Grid>
                                    <Image x:Name="icon" Height="34" Width="34" Stretch="Fill" Source="Images/AnimationControl/rightNormal.tif"/>
                                </Grid>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Source" TargetName="icon" Value="Images/AnimationControl/rightHover.tif"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Source" TargetName="icon" Value="Images/AnimationControl/rightPress.tif"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Source" TargetName="icon" Value="Images/AnimationControl/rightDisable.tif"/>
                                </Trigger>
                            </ControlTemplate.Triggers>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

            </Style>


            <Style x:Key="BtnStylePlay" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle">
                    <Setter.Value>
                        <Style>
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Ellipse Margin="0" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>

                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Foreground" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                <Grid>
                                    <Image x:Name="icon" Height="45" Width="45" Stretch="Fill" Source="Images/AnimationControl/pauseNormal.tif"/>
                                </Grid>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Source" TargetName="icon" Value="Images/AnimationControl/pauseHover.tif"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Source" TargetName="icon" Value="Images/AnimationControl/pausePress.tif"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Source" TargetName="icon" Value="Images/AnimationControl/pauseNormal.tif"/>
                                </Trigger>
                            </ControlTemplate.Triggers>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

            </Style>

        </ResourceDictionary>
    </Window.Resources>

    <Grid  Background="#FFEDEDED">
        <Grid.RowDefinitions>
            <RowDefinition Height="30" />
            <RowDefinition Height="400" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Grid Background="#213244" MouseLeftButtonDown="Title_MouseButtonEventHandler">
            <TextBlock Name="captionTextBlock" FontSize="16" Text="" Foreground="White" TextAlignment="Center" VerticalAlignment="Center" HorizontalAlignment="Center"></TextBlock>
            <local:MinimizeCloseButton MinimizeOrCloseStyle="Close" IsCancel="True" Height="30" Width="30" VerticalAlignment="Center" HorizontalAlignment="Right" Click="btnClose_Click"/>
        </Grid>

        <Grid Name="MediaGrid" Grid.Row="1" >
            <Rectangle Stroke="Black" StrokeThickness="1" />
            <Image x:Name="imgAnimation" Width="310" />
        </Grid>

        <StackPanel Orientation="Horizontal" Grid.Row="2" HorizontalAlignment="Center" >
            <Button x:Name="btnPrev"  Style="{DynamicResource BtnStyleLeft}" Click="btnPre_Click" Margin ="5,0" Content="Prev" />
            <Button x:Name="btnStart" Style="{DynamicResource BtnStylePlay}" Click="btnStart_Click" Margin ="5,0" Content="Start" />
            <Button x:Name="btnNext"  Style="{DynamicResource BtnStyleRight}" Click="btnNext_Click" Margin ="5,0" Content="Next" />
        </StackPanel>

    </Grid>
</Window>
