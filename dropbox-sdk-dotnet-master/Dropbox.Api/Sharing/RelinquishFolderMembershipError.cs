// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Sharing
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>The relinquish folder membership error object</para>
    /// </summary>
    public class RelinquishFolderMembershipError
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<RelinquishFolderMembershipError> Encoder = new RelinquishFolderMembershipErrorEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<RelinquishFolderMembershipError> Decoder = new RelinquishFolderMembershipErrorDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="RelinquishFolderMembershipError"
        /// /> class.</para>
        /// </summary>
        public RelinquishFolderMembershipError()
        {
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is AccessError</para>
        /// </summary>
        public bool IsAccessError
        {
            get
            {
                return this is AccessError;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a AccessError, or <c>null</c>.</para>
        /// </summary>
        public AccessError AsAccessError
        {
            get
            {
                return this as AccessError;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is FolderOwner</para>
        /// </summary>
        public bool IsFolderOwner
        {
            get
            {
                return this is FolderOwner;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a FolderOwner, or <c>null</c>.</para>
        /// </summary>
        public FolderOwner AsFolderOwner
        {
            get
            {
                return this as FolderOwner;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Mounted</para>
        /// </summary>
        public bool IsMounted
        {
            get
            {
                return this is Mounted;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Mounted, or <c>null</c>.</para>
        /// </summary>
        public Mounted AsMounted
        {
            get
            {
                return this as Mounted;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is GroupAccess</para>
        /// </summary>
        public bool IsGroupAccess
        {
            get
            {
                return this is GroupAccess;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a GroupAccess, or <c>null</c>.</para>
        /// </summary>
        public GroupAccess AsGroupAccess
        {
            get
            {
                return this as GroupAccess;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is TeamFolder</para>
        /// </summary>
        public bool IsTeamFolder
        {
            get
            {
                return this is TeamFolder;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a TeamFolder, or <c>null</c>.</para>
        /// </summary>
        public TeamFolder AsTeamFolder
        {
            get
            {
                return this as TeamFolder;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is NoPermission</para>
        /// </summary>
        public bool IsNoPermission
        {
            get
            {
                return this is NoPermission;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a NoPermission, or <c>null</c>.</para>
        /// </summary>
        public NoPermission AsNoPermission
        {
            get
            {
                return this as NoPermission;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Other</para>
        /// </summary>
        public bool IsOther
        {
            get
            {
                return this is Other;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Other, or <c>null</c>.</para>
        /// </summary>
        public Other AsOther
        {
            get
            {
                return this as Other;
            }
        }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="RelinquishFolderMembershipError" />.</para>
        /// </summary>
        private class RelinquishFolderMembershipErrorEncoder : enc.StructEncoder<RelinquishFolderMembershipError>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(RelinquishFolderMembershipError value, enc.IJsonWriter writer)
            {
                if (value is AccessError)
                {
                    WriteProperty(".tag", "access_error", writer, enc.StringEncoder.Instance);
                    AccessError.Encoder.EncodeFields((AccessError)value, writer);
                    return;
                }
                if (value is FolderOwner)
                {
                    WriteProperty(".tag", "folder_owner", writer, enc.StringEncoder.Instance);
                    FolderOwner.Encoder.EncodeFields((FolderOwner)value, writer);
                    return;
                }
                if (value is Mounted)
                {
                    WriteProperty(".tag", "mounted", writer, enc.StringEncoder.Instance);
                    Mounted.Encoder.EncodeFields((Mounted)value, writer);
                    return;
                }
                if (value is GroupAccess)
                {
                    WriteProperty(".tag", "group_access", writer, enc.StringEncoder.Instance);
                    GroupAccess.Encoder.EncodeFields((GroupAccess)value, writer);
                    return;
                }
                if (value is TeamFolder)
                {
                    WriteProperty(".tag", "team_folder", writer, enc.StringEncoder.Instance);
                    TeamFolder.Encoder.EncodeFields((TeamFolder)value, writer);
                    return;
                }
                if (value is NoPermission)
                {
                    WriteProperty(".tag", "no_permission", writer, enc.StringEncoder.Instance);
                    NoPermission.Encoder.EncodeFields((NoPermission)value, writer);
                    return;
                }
                if (value is Other)
                {
                    WriteProperty(".tag", "other", writer, enc.StringEncoder.Instance);
                    Other.Encoder.EncodeFields((Other)value, writer);
                    return;
                }
                throw new sys.InvalidOperationException();
            }
        }

        #endregion

        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="RelinquishFolderMembershipError" />.</para>
        /// </summary>
        private class RelinquishFolderMembershipErrorDecoder : enc.UnionDecoder<RelinquishFolderMembershipError>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="RelinquishFolderMembershipError"
            /// />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override RelinquishFolderMembershipError Create()
            {
                return new RelinquishFolderMembershipError();
            }

            /// <summary>
            /// <para>Decode based on given tag.</para>
            /// </summary>
            /// <param name="tag">The tag.</param>
            /// <param name="reader">The json reader.</param>
            /// <returns>The decoded object.</returns>
            protected override RelinquishFolderMembershipError Decode(string tag, enc.IJsonReader reader)
            {
                switch (tag)
                {
                    case "access_error":
                        return AccessError.Decoder.DecodeFields(reader);
                    case "folder_owner":
                        return FolderOwner.Decoder.DecodeFields(reader);
                    case "mounted":
                        return Mounted.Decoder.DecodeFields(reader);
                    case "group_access":
                        return GroupAccess.Decoder.DecodeFields(reader);
                    case "team_folder":
                        return TeamFolder.Decoder.DecodeFields(reader);
                    case "no_permission":
                        return NoPermission.Decoder.DecodeFields(reader);
                    default:
                        return Other.Decoder.DecodeFields(reader);
                }
            }
        }

        #endregion

        /// <summary>
        /// <para>The access error object</para>
        /// </summary>
        public sealed class AccessError : RelinquishFolderMembershipError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<AccessError> Encoder = new AccessErrorEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<AccessError> Decoder = new AccessErrorDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="AccessError" />
            /// class.</para>
            /// </summary>
            /// <param name="value">The value</param>
            public AccessError(SharedFolderAccessError value)
            {
                this.Value = value;
            }
            /// <summary>
            /// <para>Initializes a new instance of the <see cref="AccessError" />
            /// class.</para>
            /// </summary>
            private AccessError()
            {
            }

            /// <summary>
            /// <para>Gets the value of this instance.</para>
            /// </summary>
            public SharedFolderAccessError Value { get; private set; }

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="AccessError" />.</para>
            /// </summary>
            private class AccessErrorEncoder : enc.StructEncoder<AccessError>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(AccessError value, enc.IJsonWriter writer)
                {
                    Dropbox.Api.Sharing.SharedFolderAccessError.Encoder.EncodeFields(value.Value, writer);
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="AccessError" />.</para>
            /// </summary>
            private class AccessErrorDecoder : enc.StructDecoder<AccessError>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="AccessError" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override AccessError Create()
                {
                    return new AccessError();
                }

                /// <summary>
                /// <para>Set given field.</para>
                /// </summary>
                /// <param name="value">The field value.</param>
                /// <param name="fieldName">The field name.</param>
                /// <param name="reader">The json reader.</param>
                protected override void SetField(AccessError value, string fieldName, enc.IJsonReader reader)
                {
                    switch (fieldName)
                    {
                        case "access_error":
                            value.Value = Dropbox.Api.Sharing.SharedFolderAccessError.Decoder.Decode(reader);
                            break;
                        default:
                            reader.Skip();
                            break;
                    }
                }
            }

            #endregion
        }

        /// <summary>
        /// <para>The current user is the owner of the shared folder. Owners cannot relinquish
        /// membership to their own folders. Try unsharing or transferring ownership
        /// first.</para>
        /// </summary>
        public sealed class FolderOwner : RelinquishFolderMembershipError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<FolderOwner> Encoder = new FolderOwnerEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<FolderOwner> Decoder = new FolderOwnerDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="FolderOwner" />
            /// class.</para>
            /// </summary>
            private FolderOwner()
            {
            }

            /// <summary>
            /// <para>A singleton instance of FolderOwner</para>
            /// </summary>
            public static readonly FolderOwner Instance = new FolderOwner();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="FolderOwner" />.</para>
            /// </summary>
            private class FolderOwnerEncoder : enc.StructEncoder<FolderOwner>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(FolderOwner value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="FolderOwner" />.</para>
            /// </summary>
            private class FolderOwnerDecoder : enc.StructDecoder<FolderOwner>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="FolderOwner" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override FolderOwner Create()
                {
                    return new FolderOwner();
                }

                /// <summary>
                /// <para>Decode fields without ensuring start and end object.</para>
                /// </summary>
                /// <param name="reader">The json reader.</param>
                /// <returns>The decoded object.</returns>
                public override FolderOwner DecodeFields(enc.IJsonReader reader)
                {
                    return FolderOwner.Instance;
                }
            }

            #endregion
        }

        /// <summary>
        /// <para>The shared folder is currently mounted.  Unmount the shared folder before
        /// relinquishing membership.</para>
        /// </summary>
        public sealed class Mounted : RelinquishFolderMembershipError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Mounted> Encoder = new MountedEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Mounted> Decoder = new MountedDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Mounted" /> class.</para>
            /// </summary>
            private Mounted()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Mounted</para>
            /// </summary>
            public static readonly Mounted Instance = new Mounted();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Mounted" />.</para>
            /// </summary>
            private class MountedEncoder : enc.StructEncoder<Mounted>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Mounted value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Mounted" />.</para>
            /// </summary>
            private class MountedDecoder : enc.StructDecoder<Mounted>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Mounted" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Mounted Create()
                {
                    return new Mounted();
                }

                /// <summary>
                /// <para>Decode fields without ensuring start and end object.</para>
                /// </summary>
                /// <param name="reader">The json reader.</param>
                /// <returns>The decoded object.</returns>
                public override Mounted DecodeFields(enc.IJsonReader reader)
                {
                    return Mounted.Instance;
                }
            }

            #endregion
        }

        /// <summary>
        /// <para>The current user has access to the shared folder via a group.  You can't
        /// relinquish membership to folders shared via groups.</para>
        /// </summary>
        public sealed class GroupAccess : RelinquishFolderMembershipError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<GroupAccess> Encoder = new GroupAccessEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<GroupAccess> Decoder = new GroupAccessDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="GroupAccess" />
            /// class.</para>
            /// </summary>
            private GroupAccess()
            {
            }

            /// <summary>
            /// <para>A singleton instance of GroupAccess</para>
            /// </summary>
            public static readonly GroupAccess Instance = new GroupAccess();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="GroupAccess" />.</para>
            /// </summary>
            private class GroupAccessEncoder : enc.StructEncoder<GroupAccess>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(GroupAccess value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="GroupAccess" />.</para>
            /// </summary>
            private class GroupAccessDecoder : enc.StructDecoder<GroupAccess>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="GroupAccess" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override GroupAccess Create()
                {
                    return new GroupAccess();
                }

                /// <summary>
                /// <para>Decode fields without ensuring start and end object.</para>
                /// </summary>
                /// <param name="reader">The json reader.</param>
                /// <returns>The decoded object.</returns>
                public override GroupAccess DecodeFields(enc.IJsonReader reader)
                {
                    return GroupAccess.Instance;
                }
            }

            #endregion
        }

        /// <summary>
        /// <para>This action cannot be performed on a team shared folder.</para>
        /// </summary>
        public sealed class TeamFolder : RelinquishFolderMembershipError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<TeamFolder> Encoder = new TeamFolderEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<TeamFolder> Decoder = new TeamFolderDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="TeamFolder" /> class.</para>
            /// </summary>
            private TeamFolder()
            {
            }

            /// <summary>
            /// <para>A singleton instance of TeamFolder</para>
            /// </summary>
            public static readonly TeamFolder Instance = new TeamFolder();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="TeamFolder" />.</para>
            /// </summary>
            private class TeamFolderEncoder : enc.StructEncoder<TeamFolder>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(TeamFolder value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="TeamFolder" />.</para>
            /// </summary>
            private class TeamFolderDecoder : enc.StructDecoder<TeamFolder>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="TeamFolder" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override TeamFolder Create()
                {
                    return new TeamFolder();
                }

                /// <summary>
                /// <para>Decode fields without ensuring start and end object.</para>
                /// </summary>
                /// <param name="reader">The json reader.</param>
                /// <returns>The decoded object.</returns>
                public override TeamFolder DecodeFields(enc.IJsonReader reader)
                {
                    return TeamFolder.Instance;
                }
            }

            #endregion
        }

        /// <summary>
        /// <para>The current user does not have permission to perform this action.</para>
        /// </summary>
        public sealed class NoPermission : RelinquishFolderMembershipError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<NoPermission> Encoder = new NoPermissionEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<NoPermission> Decoder = new NoPermissionDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="NoPermission" />
            /// class.</para>
            /// </summary>
            private NoPermission()
            {
            }

            /// <summary>
            /// <para>A singleton instance of NoPermission</para>
            /// </summary>
            public static readonly NoPermission Instance = new NoPermission();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="NoPermission" />.</para>
            /// </summary>
            private class NoPermissionEncoder : enc.StructEncoder<NoPermission>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(NoPermission value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="NoPermission" />.</para>
            /// </summary>
            private class NoPermissionDecoder : enc.StructDecoder<NoPermission>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="NoPermission" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override NoPermission Create()
                {
                    return new NoPermission();
                }

                /// <summary>
                /// <para>Decode fields without ensuring start and end object.</para>
                /// </summary>
                /// <param name="reader">The json reader.</param>
                /// <returns>The decoded object.</returns>
                public override NoPermission DecodeFields(enc.IJsonReader reader)
                {
                    return NoPermission.Instance;
                }
            }

            #endregion
        }

        /// <summary>
        /// <para>The other object</para>
        /// </summary>
        public sealed class Other : RelinquishFolderMembershipError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Other> Encoder = new OtherEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Other> Decoder = new OtherDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Other" /> class.</para>
            /// </summary>
            private Other()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Other</para>
            /// </summary>
            public static readonly Other Instance = new Other();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherEncoder : enc.StructEncoder<Other>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Other value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherDecoder : enc.StructDecoder<Other>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Other" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Other Create()
                {
                    return new Other();
                }

                /// <summary>
                /// <para>Decode fields without ensuring start and end object.</para>
                /// </summary>
                /// <param name="reader">The json reader.</param>
                /// <returns>The decoded object.</returns>
                public override Other DecodeFields(enc.IJsonReader reader)
                {
                    return Other.Instance;
                }
            }

            #endregion
        }
    }
}
