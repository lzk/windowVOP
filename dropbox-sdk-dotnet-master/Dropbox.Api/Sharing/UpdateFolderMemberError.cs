// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Sharing
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>The update folder member error object</para>
    /// </summary>
    public class UpdateFolderMemberError
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<UpdateFolderMemberError> Encoder = new UpdateFolderMemberErrorEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<UpdateFolderMemberError> Decoder = new UpdateFolderMemberErrorDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="UpdateFolderMemberError" />
        /// class.</para>
        /// </summary>
        public UpdateFolderMemberError()
        {
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is AccessError</para>
        /// </summary>
        public bool IsAccessError
        {
            get
            {
                return this is AccessError;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a AccessError, or <c>null</c>.</para>
        /// </summary>
        public AccessError AsAccessError
        {
            get
            {
                return this as AccessError;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is MemberError</para>
        /// </summary>
        public bool IsMemberError
        {
            get
            {
                return this is MemberError;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a MemberError, or <c>null</c>.</para>
        /// </summary>
        public MemberError AsMemberError
        {
            get
            {
                return this as MemberError;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is NoExplicitAccess</para>
        /// </summary>
        public bool IsNoExplicitAccess
        {
            get
            {
                return this is NoExplicitAccess;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a NoExplicitAccess, or <c>null</c>.</para>
        /// </summary>
        public NoExplicitAccess AsNoExplicitAccess
        {
            get
            {
                return this as NoExplicitAccess;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is InsufficientPlan</para>
        /// </summary>
        public bool IsInsufficientPlan
        {
            get
            {
                return this is InsufficientPlan;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a InsufficientPlan, or <c>null</c>.</para>
        /// </summary>
        public InsufficientPlan AsInsufficientPlan
        {
            get
            {
                return this as InsufficientPlan;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is NoPermission</para>
        /// </summary>
        public bool IsNoPermission
        {
            get
            {
                return this is NoPermission;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a NoPermission, or <c>null</c>.</para>
        /// </summary>
        public NoPermission AsNoPermission
        {
            get
            {
                return this as NoPermission;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Other</para>
        /// </summary>
        public bool IsOther
        {
            get
            {
                return this is Other;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Other, or <c>null</c>.</para>
        /// </summary>
        public Other AsOther
        {
            get
            {
                return this as Other;
            }
        }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="UpdateFolderMemberError" />.</para>
        /// </summary>
        private class UpdateFolderMemberErrorEncoder : enc.StructEncoder<UpdateFolderMemberError>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(UpdateFolderMemberError value, enc.IJsonWriter writer)
            {
                if (value is AccessError)
                {
                    WriteProperty(".tag", "access_error", writer, enc.StringEncoder.Instance);
                    AccessError.Encoder.EncodeFields((AccessError)value, writer);
                    return;
                }
                if (value is MemberError)
                {
                    WriteProperty(".tag", "member_error", writer, enc.StringEncoder.Instance);
                    MemberError.Encoder.EncodeFields((MemberError)value, writer);
                    return;
                }
                if (value is NoExplicitAccess)
                {
                    WriteProperty(".tag", "no_explicit_access", writer, enc.StringEncoder.Instance);
                    NoExplicitAccess.Encoder.EncodeFields((NoExplicitAccess)value, writer);
                    return;
                }
                if (value is InsufficientPlan)
                {
                    WriteProperty(".tag", "insufficient_plan", writer, enc.StringEncoder.Instance);
                    InsufficientPlan.Encoder.EncodeFields((InsufficientPlan)value, writer);
                    return;
                }
                if (value is NoPermission)
                {
                    WriteProperty(".tag", "no_permission", writer, enc.StringEncoder.Instance);
                    NoPermission.Encoder.EncodeFields((NoPermission)value, writer);
                    return;
                }
                if (value is Other)
                {
                    WriteProperty(".tag", "other", writer, enc.StringEncoder.Instance);
                    Other.Encoder.EncodeFields((Other)value, writer);
                    return;
                }
                throw new sys.InvalidOperationException();
            }
        }

        #endregion

        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="UpdateFolderMemberError" />.</para>
        /// </summary>
        private class UpdateFolderMemberErrorDecoder : enc.UnionDecoder<UpdateFolderMemberError>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="UpdateFolderMemberError"
            /// />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override UpdateFolderMemberError Create()
            {
                return new UpdateFolderMemberError();
            }

            /// <summary>
            /// <para>Decode based on given tag.</para>
            /// </summary>
            /// <param name="tag">The tag.</param>
            /// <param name="reader">The json reader.</param>
            /// <returns>The decoded object.</returns>
            protected override UpdateFolderMemberError Decode(string tag, enc.IJsonReader reader)
            {
                switch (tag)
                {
                    case "access_error":
                        return AccessError.Decoder.DecodeFields(reader);
                    case "member_error":
                        return MemberError.Decoder.DecodeFields(reader);
                    case "no_explicit_access":
                        return NoExplicitAccess.Decoder.DecodeFields(reader);
                    case "insufficient_plan":
                        return InsufficientPlan.Decoder.DecodeFields(reader);
                    case "no_permission":
                        return NoPermission.Decoder.DecodeFields(reader);
                    default:
                        return Other.Decoder.DecodeFields(reader);
                }
            }
        }

        #endregion

        /// <summary>
        /// <para>The access error object</para>
        /// </summary>
        public sealed class AccessError : UpdateFolderMemberError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<AccessError> Encoder = new AccessErrorEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<AccessError> Decoder = new AccessErrorDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="AccessError" />
            /// class.</para>
            /// </summary>
            /// <param name="value">The value</param>
            public AccessError(SharedFolderAccessError value)
            {
                this.Value = value;
            }
            /// <summary>
            /// <para>Initializes a new instance of the <see cref="AccessError" />
            /// class.</para>
            /// </summary>
            private AccessError()
            {
            }

            /// <summary>
            /// <para>Gets the value of this instance.</para>
            /// </summary>
            public SharedFolderAccessError Value { get; private set; }

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="AccessError" />.</para>
            /// </summary>
            private class AccessErrorEncoder : enc.StructEncoder<AccessError>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(AccessError value, enc.IJsonWriter writer)
                {
                    Dropbox.Api.Sharing.SharedFolderAccessError.Encoder.EncodeFields(value.Value, writer);
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="AccessError" />.</para>
            /// </summary>
            private class AccessErrorDecoder : enc.StructDecoder<AccessError>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="AccessError" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override AccessError Create()
                {
                    return new AccessError();
                }

                /// <summary>
                /// <para>Set given field.</para>
                /// </summary>
                /// <param name="value">The field value.</param>
                /// <param name="fieldName">The field name.</param>
                /// <param name="reader">The json reader.</param>
                protected override void SetField(AccessError value, string fieldName, enc.IJsonReader reader)
                {
                    switch (fieldName)
                    {
                        case "access_error":
                            value.Value = Dropbox.Api.Sharing.SharedFolderAccessError.Decoder.Decode(reader);
                            break;
                        default:
                            reader.Skip();
                            break;
                    }
                }
            }

            #endregion
        }

        /// <summary>
        /// <para>The member error object</para>
        /// </summary>
        public sealed class MemberError : UpdateFolderMemberError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<MemberError> Encoder = new MemberErrorEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<MemberError> Decoder = new MemberErrorDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="MemberError" />
            /// class.</para>
            /// </summary>
            /// <param name="value">The value</param>
            public MemberError(SharedFolderMemberError value)
            {
                this.Value = value;
            }
            /// <summary>
            /// <para>Initializes a new instance of the <see cref="MemberError" />
            /// class.</para>
            /// </summary>
            private MemberError()
            {
            }

            /// <summary>
            /// <para>Gets the value of this instance.</para>
            /// </summary>
            public SharedFolderMemberError Value { get; private set; }

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="MemberError" />.</para>
            /// </summary>
            private class MemberErrorEncoder : enc.StructEncoder<MemberError>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(MemberError value, enc.IJsonWriter writer)
                {
                    Dropbox.Api.Sharing.SharedFolderMemberError.Encoder.EncodeFields(value.Value, writer);
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="MemberError" />.</para>
            /// </summary>
            private class MemberErrorDecoder : enc.StructDecoder<MemberError>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="MemberError" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override MemberError Create()
                {
                    return new MemberError();
                }

                /// <summary>
                /// <para>Set given field.</para>
                /// </summary>
                /// <param name="value">The field value.</param>
                /// <param name="fieldName">The field name.</param>
                /// <param name="reader">The json reader.</param>
                protected override void SetField(MemberError value, string fieldName, enc.IJsonReader reader)
                {
                    switch (fieldName)
                    {
                        case "member_error":
                            value.Value = Dropbox.Api.Sharing.SharedFolderMemberError.Decoder.Decode(reader);
                            break;
                        default:
                            reader.Skip();
                            break;
                    }
                }
            }

            #endregion
        }

        /// <summary>
        /// <para>If updating the access type required the member to be added to the shared
        /// folder and there was an error when adding the member.</para>
        /// </summary>
        public sealed class NoExplicitAccess : UpdateFolderMemberError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<NoExplicitAccess> Encoder = new NoExplicitAccessEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<NoExplicitAccess> Decoder = new NoExplicitAccessDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="NoExplicitAccess" />
            /// class.</para>
            /// </summary>
            /// <param name="value">The value</param>
            public NoExplicitAccess(AddFolderMemberError value)
            {
                this.Value = value;
            }
            /// <summary>
            /// <para>Initializes a new instance of the <see cref="NoExplicitAccess" />
            /// class.</para>
            /// </summary>
            private NoExplicitAccess()
            {
            }

            /// <summary>
            /// <para>Gets the value of this instance.</para>
            /// </summary>
            public AddFolderMemberError Value { get; private set; }

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="NoExplicitAccess" />.</para>
            /// </summary>
            private class NoExplicitAccessEncoder : enc.StructEncoder<NoExplicitAccess>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(NoExplicitAccess value, enc.IJsonWriter writer)
                {
                    Dropbox.Api.Sharing.AddFolderMemberError.Encoder.EncodeFields(value.Value, writer);
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="NoExplicitAccess" />.</para>
            /// </summary>
            private class NoExplicitAccessDecoder : enc.StructDecoder<NoExplicitAccess>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="NoExplicitAccess" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override NoExplicitAccess Create()
                {
                    return new NoExplicitAccess();
                }

                /// <summary>
                /// <para>Set given field.</para>
                /// </summary>
                /// <param name="value">The field value.</param>
                /// <param name="fieldName">The field name.</param>
                /// <param name="reader">The json reader.</param>
                protected override void SetField(NoExplicitAccess value, string fieldName, enc.IJsonReader reader)
                {
                    switch (fieldName)
                    {
                        case "no_explicit_access":
                            value.Value = Dropbox.Api.Sharing.AddFolderMemberError.Decoder.Decode(reader);
                            break;
                        default:
                            reader.Skip();
                            break;
                    }
                }
            }

            #endregion
        }

        /// <summary>
        /// <para>The current user's account doesn't support this action. An example of this is
        /// when downgrading a member from editor to viewer. This action can only be performed
        /// by users that have upgraded to a Pro or Business plan.</para>
        /// </summary>
        public sealed class InsufficientPlan : UpdateFolderMemberError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<InsufficientPlan> Encoder = new InsufficientPlanEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<InsufficientPlan> Decoder = new InsufficientPlanDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="InsufficientPlan" />
            /// class.</para>
            /// </summary>
            private InsufficientPlan()
            {
            }

            /// <summary>
            /// <para>A singleton instance of InsufficientPlan</para>
            /// </summary>
            public static readonly InsufficientPlan Instance = new InsufficientPlan();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="InsufficientPlan" />.</para>
            /// </summary>
            private class InsufficientPlanEncoder : enc.StructEncoder<InsufficientPlan>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(InsufficientPlan value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="InsufficientPlan" />.</para>
            /// </summary>
            private class InsufficientPlanDecoder : enc.StructDecoder<InsufficientPlan>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="InsufficientPlan" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override InsufficientPlan Create()
                {
                    return new InsufficientPlan();
                }

                /// <summary>
                /// <para>Decode fields without ensuring start and end object.</para>
                /// </summary>
                /// <param name="reader">The json reader.</param>
                /// <returns>The decoded object.</returns>
                public override InsufficientPlan DecodeFields(enc.IJsonReader reader)
                {
                    return InsufficientPlan.Instance;
                }
            }

            #endregion
        }

        /// <summary>
        /// <para>The current user does not have permission to perform this action.</para>
        /// </summary>
        public sealed class NoPermission : UpdateFolderMemberError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<NoPermission> Encoder = new NoPermissionEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<NoPermission> Decoder = new NoPermissionDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="NoPermission" />
            /// class.</para>
            /// </summary>
            private NoPermission()
            {
            }

            /// <summary>
            /// <para>A singleton instance of NoPermission</para>
            /// </summary>
            public static readonly NoPermission Instance = new NoPermission();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="NoPermission" />.</para>
            /// </summary>
            private class NoPermissionEncoder : enc.StructEncoder<NoPermission>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(NoPermission value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="NoPermission" />.</para>
            /// </summary>
            private class NoPermissionDecoder : enc.StructDecoder<NoPermission>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="NoPermission" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override NoPermission Create()
                {
                    return new NoPermission();
                }

                /// <summary>
                /// <para>Decode fields without ensuring start and end object.</para>
                /// </summary>
                /// <param name="reader">The json reader.</param>
                /// <returns>The decoded object.</returns>
                public override NoPermission DecodeFields(enc.IJsonReader reader)
                {
                    return NoPermission.Instance;
                }
            }

            #endregion
        }

        /// <summary>
        /// <para>The other object</para>
        /// </summary>
        public sealed class Other : UpdateFolderMemberError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Other> Encoder = new OtherEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Other> Decoder = new OtherDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Other" /> class.</para>
            /// </summary>
            private Other()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Other</para>
            /// </summary>
            public static readonly Other Instance = new Other();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherEncoder : enc.StructEncoder<Other>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Other value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherDecoder : enc.StructDecoder<Other>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Other" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Other Create()
                {
                    return new Other();
                }

                /// <summary>
                /// <para>Decode fields without ensuring start and end object.</para>
                /// </summary>
                /// <param name="reader">The json reader.</param>
                /// <returns>The decoded object.</returns>
                public override Other DecodeFields(enc.IJsonReader reader)
                {
                    return Other.Instance;
                }
            }

            #endregion
        }
    }
}
