// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Sharing
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>The shared link settings error object</para>
    /// </summary>
    public class SharedLinkSettingsError
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<SharedLinkSettingsError> Encoder = new SharedLinkSettingsErrorEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<SharedLinkSettingsError> Decoder = new SharedLinkSettingsErrorDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="SharedLinkSettingsError" />
        /// class.</para>
        /// </summary>
        public SharedLinkSettingsError()
        {
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is InvalidSettings</para>
        /// </summary>
        public bool IsInvalidSettings
        {
            get
            {
                return this is InvalidSettings;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a InvalidSettings, or <c>null</c>.</para>
        /// </summary>
        public InvalidSettings AsInvalidSettings
        {
            get
            {
                return this as InvalidSettings;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is NotAuthorized</para>
        /// </summary>
        public bool IsNotAuthorized
        {
            get
            {
                return this is NotAuthorized;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a NotAuthorized, or <c>null</c>.</para>
        /// </summary>
        public NotAuthorized AsNotAuthorized
        {
            get
            {
                return this as NotAuthorized;
            }
        }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="SharedLinkSettingsError" />.</para>
        /// </summary>
        private class SharedLinkSettingsErrorEncoder : enc.StructEncoder<SharedLinkSettingsError>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(SharedLinkSettingsError value, enc.IJsonWriter writer)
            {
                if (value is InvalidSettings)
                {
                    WriteProperty(".tag", "invalid_settings", writer, enc.StringEncoder.Instance);
                    InvalidSettings.Encoder.EncodeFields((InvalidSettings)value, writer);
                    return;
                }
                if (value is NotAuthorized)
                {
                    WriteProperty(".tag", "not_authorized", writer, enc.StringEncoder.Instance);
                    NotAuthorized.Encoder.EncodeFields((NotAuthorized)value, writer);
                    return;
                }
                throw new sys.InvalidOperationException();
            }
        }

        #endregion

        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="SharedLinkSettingsError" />.</para>
        /// </summary>
        private class SharedLinkSettingsErrorDecoder : enc.UnionDecoder<SharedLinkSettingsError>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="SharedLinkSettingsError"
            /// />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override SharedLinkSettingsError Create()
            {
                return new SharedLinkSettingsError();
            }

            /// <summary>
            /// <para>Decode based on given tag.</para>
            /// </summary>
            /// <param name="tag">The tag.</param>
            /// <param name="reader">The json reader.</param>
            /// <returns>The decoded object.</returns>
            protected override SharedLinkSettingsError Decode(string tag, enc.IJsonReader reader)
            {
                switch (tag)
                {
                    case "invalid_settings":
                        return InvalidSettings.Decoder.DecodeFields(reader);
                    case "not_authorized":
                        return NotAuthorized.Decoder.DecodeFields(reader);
                    default:
                        throw new sys.InvalidOperationException();
                }
            }
        }

        #endregion

        /// <summary>
        /// <para>The given settings are invalid (for example, all attributes of the <see
        /// cref="SharedLinkSettings" /> are empty, the requested visibility is <see
        /// cref="Dropbox.Api.Sharing.RequestedVisibility.Password" /> but the <see
        /// cref="Dropbox.Api.Sharing.SharedLinkSettings.LinkPassword" /> is missing, <see
        /// cref="Dropbox.Api.Sharing.SharedLinkSettings.Expires" /> is set to the past,
        /// etc.)</para>
        /// </summary>
        public sealed class InvalidSettings : SharedLinkSettingsError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<InvalidSettings> Encoder = new InvalidSettingsEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<InvalidSettings> Decoder = new InvalidSettingsDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="InvalidSettings" />
            /// class.</para>
            /// </summary>
            private InvalidSettings()
            {
            }

            /// <summary>
            /// <para>A singleton instance of InvalidSettings</para>
            /// </summary>
            public static readonly InvalidSettings Instance = new InvalidSettings();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="InvalidSettings" />.</para>
            /// </summary>
            private class InvalidSettingsEncoder : enc.StructEncoder<InvalidSettings>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(InvalidSettings value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="InvalidSettings" />.</para>
            /// </summary>
            private class InvalidSettingsDecoder : enc.StructDecoder<InvalidSettings>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="InvalidSettings" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override InvalidSettings Create()
                {
                    return new InvalidSettings();
                }

                /// <summary>
                /// <para>Decode fields without ensuring start and end object.</para>
                /// </summary>
                /// <param name="reader">The json reader.</param>
                /// <returns>The decoded object.</returns>
                public override InvalidSettings DecodeFields(enc.IJsonReader reader)
                {
                    return InvalidSettings.Instance;
                }
            }

            #endregion
        }

        /// <summary>
        /// <para>User is not allowed to modify the settings of this link. Note that basic
        /// users can only set <see cref="Dropbox.Api.Sharing.RequestedVisibility.Public" /> as
        /// the <see cref="Dropbox.Api.Sharing.SharedLinkSettings.RequestedVisibility" /> and
        /// cannot set <see cref="Dropbox.Api.Sharing.SharedLinkSettings.Expires" /></para>
        /// </summary>
        public sealed class NotAuthorized : SharedLinkSettingsError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<NotAuthorized> Encoder = new NotAuthorizedEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<NotAuthorized> Decoder = new NotAuthorizedDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="NotAuthorized" />
            /// class.</para>
            /// </summary>
            private NotAuthorized()
            {
            }

            /// <summary>
            /// <para>A singleton instance of NotAuthorized</para>
            /// </summary>
            public static readonly NotAuthorized Instance = new NotAuthorized();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="NotAuthorized" />.</para>
            /// </summary>
            private class NotAuthorizedEncoder : enc.StructEncoder<NotAuthorized>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(NotAuthorized value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="NotAuthorized" />.</para>
            /// </summary>
            private class NotAuthorizedDecoder : enc.StructDecoder<NotAuthorized>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="NotAuthorized" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override NotAuthorized Create()
                {
                    return new NotAuthorized();
                }

                /// <summary>
                /// <para>Decode fields without ensuring start and end object.</para>
                /// </summary>
                /// <param name="reader">The json reader.</param>
                /// <returns>The decoded object.</returns>
                public override NotAuthorized DecodeFields(enc.IJsonReader reader)
                {
                    return NotAuthorized.Instance;
                }
            }

            #endregion
        }
    }
}
