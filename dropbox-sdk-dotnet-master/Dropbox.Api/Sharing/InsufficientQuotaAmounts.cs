// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Sharing
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>The insufficient quota amounts object</para>
    /// </summary>
    public class InsufficientQuotaAmounts
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<InsufficientQuotaAmounts> Encoder = new InsufficientQuotaAmountsEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<InsufficientQuotaAmounts> Decoder = new InsufficientQuotaAmountsDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="InsufficientQuotaAmounts" />
        /// class.</para>
        /// </summary>
        /// <param name="spaceNeeded">The amount of space needed to add the item (the size of
        /// the item).</param>
        /// <param name="spaceShortage">The amount of extra space needed to add the
        /// item.</param>
        /// <param name="spaceLeft">The amount of space left in the user's Dropbox, less than
        /// space_needed.</param>
        public InsufficientQuotaAmounts(ulong spaceNeeded,
                                        ulong spaceShortage,
                                        ulong spaceLeft)
        {
            this.SpaceNeeded = spaceNeeded;
            this.SpaceShortage = spaceShortage;
            this.SpaceLeft = spaceLeft;
        }

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="InsufficientQuotaAmounts" />
        /// class.</para>
        /// </summary>
        /// <remarks>This is to construct an instance of the object when
        /// deserializing.</remarks>
        public InsufficientQuotaAmounts()
        {
        }

        /// <summary>
        /// <para>The amount of space needed to add the item (the size of the item).</para>
        /// </summary>
        public ulong SpaceNeeded { get; protected set; }

        /// <summary>
        /// <para>The amount of extra space needed to add the item.</para>
        /// </summary>
        public ulong SpaceShortage { get; protected set; }

        /// <summary>
        /// <para>The amount of space left in the user's Dropbox, less than
        /// space_needed.</para>
        /// </summary>
        public ulong SpaceLeft { get; protected set; }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="InsufficientQuotaAmounts" />.</para>
        /// </summary>
        private class InsufficientQuotaAmountsEncoder : enc.StructEncoder<InsufficientQuotaAmounts>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(InsufficientQuotaAmounts value, enc.IJsonWriter writer)
            {
                WriteProperty("space_needed", value.SpaceNeeded, writer, enc.UInt64Encoder.Instance);
                WriteProperty("space_shortage", value.SpaceShortage, writer, enc.UInt64Encoder.Instance);
                WriteProperty("space_left", value.SpaceLeft, writer, enc.UInt64Encoder.Instance);
            }
        }

        #endregion


        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="InsufficientQuotaAmounts" />.</para>
        /// </summary>
        private class InsufficientQuotaAmountsDecoder : enc.StructDecoder<InsufficientQuotaAmounts>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="InsufficientQuotaAmounts"
            /// />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override InsufficientQuotaAmounts Create()
            {
                return new InsufficientQuotaAmounts();
            }

            /// <summary>
            /// <para>Set given field.</para>
            /// </summary>
            /// <param name="value">The field value.</param>
            /// <param name="fieldName">The field name.</param>
            /// <param name="reader">The json reader.</param>
            protected override void SetField(InsufficientQuotaAmounts value, string fieldName, enc.IJsonReader reader)
            {
                switch (fieldName)
                {
                    case "space_needed":
                        value.SpaceNeeded = enc.UInt64Decoder.Instance.Decode(reader);
                        break;
                    case "space_shortage":
                        value.SpaceShortage = enc.UInt64Decoder.Instance.Decode(reader);
                        break;
                    case "space_left":
                        value.SpaceLeft = enc.UInt64Decoder.Instance.Decode(reader);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }
        }

        #endregion
    }
}
