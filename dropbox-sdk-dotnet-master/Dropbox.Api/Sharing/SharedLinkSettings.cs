// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Sharing
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>The shared link settings object</para>
    /// </summary>
    /// <seealso cref="ModifySharedLinkSettingsArgs" />
    public class SharedLinkSettings
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<SharedLinkSettings> Encoder = new SharedLinkSettingsEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<SharedLinkSettings> Decoder = new SharedLinkSettingsDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="SharedLinkSettings" />
        /// class.</para>
        /// </summary>
        /// <param name="requestedVisibility">The requested access for this shared
        /// link.</param>
        /// <param name="linkPassword">If <paramref name="requestedVisibility" /> is <see
        /// cref="Dropbox.Api.Sharing.RequestedVisibility.Password" /> this is needed to
        /// specify the password to access the link.</param>
        /// <param name="expires">Expiration time of the shared link. By default the link won't
        /// expire.</param>
        public SharedLinkSettings(RequestedVisibility requestedVisibility = null,
                                  string linkPassword = null,
                                  sys.DateTime? expires = null)
        {
            this.RequestedVisibility = requestedVisibility;
            this.LinkPassword = linkPassword;
            this.Expires = expires;
        }

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="SharedLinkSettings" />
        /// class.</para>
        /// </summary>
        /// <remarks>This is to construct an instance of the object when
        /// deserializing.</remarks>
        public SharedLinkSettings()
        {
        }

        /// <summary>
        /// <para>The requested access for this shared link.</para>
        /// </summary>
        public RequestedVisibility RequestedVisibility { get; protected set; }

        /// <summary>
        /// <para>If <see cref="RequestedVisibility" /> is <see
        /// cref="Dropbox.Api.Sharing.RequestedVisibility.Password" /> this is needed to
        /// specify the password to access the link.</para>
        /// </summary>
        public string LinkPassword { get; protected set; }

        /// <summary>
        /// <para>Expiration time of the shared link. By default the link won't expire.</para>
        /// </summary>
        public sys.DateTime? Expires { get; protected set; }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="SharedLinkSettings" />.</para>
        /// </summary>
        private class SharedLinkSettingsEncoder : enc.StructEncoder<SharedLinkSettings>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(SharedLinkSettings value, enc.IJsonWriter writer)
            {
                if (value.RequestedVisibility != null)
                {
                    WriteProperty("requested_visibility", value.RequestedVisibility, writer, Dropbox.Api.Sharing.RequestedVisibility.Encoder);
                }
                if (value.LinkPassword != null)
                {
                    WriteProperty("link_password", value.LinkPassword, writer, enc.StringEncoder.Instance);
                }
                if (value.Expires != null)
                {
                    WriteProperty("expires", value.Expires.Value, writer, enc.DateTimeEncoder.Instance);
                }
            }
        }

        #endregion


        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="SharedLinkSettings" />.</para>
        /// </summary>
        private class SharedLinkSettingsDecoder : enc.StructDecoder<SharedLinkSettings>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="SharedLinkSettings" />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override SharedLinkSettings Create()
            {
                return new SharedLinkSettings();
            }

            /// <summary>
            /// <para>Set given field.</para>
            /// </summary>
            /// <param name="value">The field value.</param>
            /// <param name="fieldName">The field name.</param>
            /// <param name="reader">The json reader.</param>
            protected override void SetField(SharedLinkSettings value, string fieldName, enc.IJsonReader reader)
            {
                switch (fieldName)
                {
                    case "requested_visibility":
                        value.RequestedVisibility = Dropbox.Api.Sharing.RequestedVisibility.Decoder.Decode(reader);
                        break;
                    case "link_password":
                        value.LinkPassword = enc.StringDecoder.Instance.Decode(reader);
                        break;
                    case "expires":
                        value.Expires = enc.DateTimeDecoder.Instance.Decode(reader);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }
        }

        #endregion
    }
}
