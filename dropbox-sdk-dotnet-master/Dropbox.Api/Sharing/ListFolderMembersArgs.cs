// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Sharing
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>The list folder members args object</para>
    /// </summary>
    /// <seealso cref="Dropbox.Api.Sharing.ListFolderMembersCursorArg" />
    public class ListFolderMembersArgs : ListFolderMembersCursorArg
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<ListFolderMembersArgs> Encoder = new ListFolderMembersArgsEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<ListFolderMembersArgs> Decoder = new ListFolderMembersArgsDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="ListFolderMembersArgs" />
        /// class.</para>
        /// </summary>
        /// <param name="sharedFolderId">The ID for the shared folder.</param>
        /// <param name="actions">This is a list indicating whether each returned member will
        /// include a boolean value <see cref="Dropbox.Api.Sharing.MemberPermission.Allow" />
        /// that describes whether the current user can perform the MemberAction on the
        /// member.</param>
        /// <param name="limit">The maximum number of results that include members, groups and
        /// invitees to return per request.</param>
        public ListFolderMembersArgs(string sharedFolderId,
                                     col.IEnumerable<MemberAction> actions = null,
                                     uint limit = 1000)
            : base(actions, limit)
        {
            if (sharedFolderId == null)
            {
                throw new sys.ArgumentNullException("sharedFolderId");
            }
            if (!re.Regex.IsMatch(sharedFolderId, @"\A(?:[-_0-9a-zA-Z:]+)\z"))
            {
                throw new sys.ArgumentOutOfRangeException("sharedFolderId", @"Value should match pattern '\A(?:[-_0-9a-zA-Z:]+)\z'");
            }

            this.SharedFolderId = sharedFolderId;
        }

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="ListFolderMembersArgs" />
        /// class.</para>
        /// </summary>
        /// <remarks>This is to construct an instance of the object when
        /// deserializing.</remarks>
        public ListFolderMembersArgs()
        {
        }

        /// <summary>
        /// <para>The ID for the shared folder.</para>
        /// </summary>
        public string SharedFolderId { get; protected set; }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="ListFolderMembersArgs" />.</para>
        /// </summary>
        private class ListFolderMembersArgsEncoder : enc.StructEncoder<ListFolderMembersArgs>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(ListFolderMembersArgs value, enc.IJsonWriter writer)
            {
                WriteProperty("shared_folder_id", value.SharedFolderId, writer, enc.StringEncoder.Instance);
                if (value.Actions.Count > 0)
                {
                    WriteListProperty("actions", value.Actions, writer, Dropbox.Api.Sharing.MemberAction.Encoder);
                }
                WriteProperty("limit", value.Limit, writer, enc.UInt32Encoder.Instance);
            }
        }

        #endregion


        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="ListFolderMembersArgs" />.</para>
        /// </summary>
        private class ListFolderMembersArgsDecoder : enc.StructDecoder<ListFolderMembersArgs>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="ListFolderMembersArgs"
            /// />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override ListFolderMembersArgs Create()
            {
                return new ListFolderMembersArgs();
            }

            /// <summary>
            /// <para>Set given field.</para>
            /// </summary>
            /// <param name="value">The field value.</param>
            /// <param name="fieldName">The field name.</param>
            /// <param name="reader">The json reader.</param>
            protected override void SetField(ListFolderMembersArgs value, string fieldName, enc.IJsonReader reader)
            {
                switch (fieldName)
                {
                    case "shared_folder_id":
                        value.SharedFolderId = enc.StringDecoder.Instance.Decode(reader);
                        break;
                    case "actions":
                        value.Actions = ReadList<MemberAction>(reader, Dropbox.Api.Sharing.MemberAction.Decoder);
                        break;
                    case "limit":
                        value.Limit = enc.UInt32Decoder.Instance.Decode(reader);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }
        }

        #endregion
    }
}
