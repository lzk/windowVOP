// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Sharing
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>The update folder policy error object</para>
    /// </summary>
    public class UpdateFolderPolicyError
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<UpdateFolderPolicyError> Encoder = new UpdateFolderPolicyErrorEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<UpdateFolderPolicyError> Decoder = new UpdateFolderPolicyErrorDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="UpdateFolderPolicyError" />
        /// class.</para>
        /// </summary>
        public UpdateFolderPolicyError()
        {
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is AccessError</para>
        /// </summary>
        public bool IsAccessError
        {
            get
            {
                return this is AccessError;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a AccessError, or <c>null</c>.</para>
        /// </summary>
        public AccessError AsAccessError
        {
            get
            {
                return this as AccessError;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is NotOnTeam</para>
        /// </summary>
        public bool IsNotOnTeam
        {
            get
            {
                return this is NotOnTeam;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a NotOnTeam, or <c>null</c>.</para>
        /// </summary>
        public NotOnTeam AsNotOnTeam
        {
            get
            {
                return this as NotOnTeam;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is
        /// TeamPolicyDisallowsMemberPolicy</para>
        /// </summary>
        public bool IsTeamPolicyDisallowsMemberPolicy
        {
            get
            {
                return this is TeamPolicyDisallowsMemberPolicy;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a TeamPolicyDisallowsMemberPolicy, or
        /// <c>null</c>.</para>
        /// </summary>
        public TeamPolicyDisallowsMemberPolicy AsTeamPolicyDisallowsMemberPolicy
        {
            get
            {
                return this as TeamPolicyDisallowsMemberPolicy;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is
        /// DisallowedSharedLinkPolicy</para>
        /// </summary>
        public bool IsDisallowedSharedLinkPolicy
        {
            get
            {
                return this is DisallowedSharedLinkPolicy;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a DisallowedSharedLinkPolicy, or <c>null</c>.</para>
        /// </summary>
        public DisallowedSharedLinkPolicy AsDisallowedSharedLinkPolicy
        {
            get
            {
                return this as DisallowedSharedLinkPolicy;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is NoPermission</para>
        /// </summary>
        public bool IsNoPermission
        {
            get
            {
                return this is NoPermission;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a NoPermission, or <c>null</c>.</para>
        /// </summary>
        public NoPermission AsNoPermission
        {
            get
            {
                return this as NoPermission;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Other</para>
        /// </summary>
        public bool IsOther
        {
            get
            {
                return this is Other;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Other, or <c>null</c>.</para>
        /// </summary>
        public Other AsOther
        {
            get
            {
                return this as Other;
            }
        }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="UpdateFolderPolicyError" />.</para>
        /// </summary>
        private class UpdateFolderPolicyErrorEncoder : enc.StructEncoder<UpdateFolderPolicyError>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(UpdateFolderPolicyError value, enc.IJsonWriter writer)
            {
                if (value is AccessError)
                {
                    WriteProperty(".tag", "access_error", writer, enc.StringEncoder.Instance);
                    AccessError.Encoder.EncodeFields((AccessError)value, writer);
                    return;
                }
                if (value is NotOnTeam)
                {
                    WriteProperty(".tag", "not_on_team", writer, enc.StringEncoder.Instance);
                    NotOnTeam.Encoder.EncodeFields((NotOnTeam)value, writer);
                    return;
                }
                if (value is TeamPolicyDisallowsMemberPolicy)
                {
                    WriteProperty(".tag", "team_policy_disallows_member_policy", writer, enc.StringEncoder.Instance);
                    TeamPolicyDisallowsMemberPolicy.Encoder.EncodeFields((TeamPolicyDisallowsMemberPolicy)value, writer);
                    return;
                }
                if (value is DisallowedSharedLinkPolicy)
                {
                    WriteProperty(".tag", "disallowed_shared_link_policy", writer, enc.StringEncoder.Instance);
                    DisallowedSharedLinkPolicy.Encoder.EncodeFields((DisallowedSharedLinkPolicy)value, writer);
                    return;
                }
                if (value is NoPermission)
                {
                    WriteProperty(".tag", "no_permission", writer, enc.StringEncoder.Instance);
                    NoPermission.Encoder.EncodeFields((NoPermission)value, writer);
                    return;
                }
                if (value is Other)
                {
                    WriteProperty(".tag", "other", writer, enc.StringEncoder.Instance);
                    Other.Encoder.EncodeFields((Other)value, writer);
                    return;
                }
                throw new sys.InvalidOperationException();
            }
        }

        #endregion

        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="UpdateFolderPolicyError" />.</para>
        /// </summary>
        private class UpdateFolderPolicyErrorDecoder : enc.UnionDecoder<UpdateFolderPolicyError>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="UpdateFolderPolicyError"
            /// />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override UpdateFolderPolicyError Create()
            {
                return new UpdateFolderPolicyError();
            }

            /// <summary>
            /// <para>Decode based on given tag.</para>
            /// </summary>
            /// <param name="tag">The tag.</param>
            /// <param name="reader">The json reader.</param>
            /// <returns>The decoded object.</returns>
            protected override UpdateFolderPolicyError Decode(string tag, enc.IJsonReader reader)
            {
                switch (tag)
                {
                    case "access_error":
                        return AccessError.Decoder.DecodeFields(reader);
                    case "not_on_team":
                        return NotOnTeam.Decoder.DecodeFields(reader);
                    case "team_policy_disallows_member_policy":
                        return TeamPolicyDisallowsMemberPolicy.Decoder.DecodeFields(reader);
                    case "disallowed_shared_link_policy":
                        return DisallowedSharedLinkPolicy.Decoder.DecodeFields(reader);
                    case "no_permission":
                        return NoPermission.Decoder.DecodeFields(reader);
                    default:
                        return Other.Decoder.DecodeFields(reader);
                }
            }
        }

        #endregion

        /// <summary>
        /// <para>The access error object</para>
        /// </summary>
        public sealed class AccessError : UpdateFolderPolicyError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<AccessError> Encoder = new AccessErrorEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<AccessError> Decoder = new AccessErrorDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="AccessError" />
            /// class.</para>
            /// </summary>
            /// <param name="value">The value</param>
            public AccessError(SharedFolderAccessError value)
            {
                this.Value = value;
            }
            /// <summary>
            /// <para>Initializes a new instance of the <see cref="AccessError" />
            /// class.</para>
            /// </summary>
            private AccessError()
            {
            }

            /// <summary>
            /// <para>Gets the value of this instance.</para>
            /// </summary>
            public SharedFolderAccessError Value { get; private set; }

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="AccessError" />.</para>
            /// </summary>
            private class AccessErrorEncoder : enc.StructEncoder<AccessError>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(AccessError value, enc.IJsonWriter writer)
                {
                    Dropbox.Api.Sharing.SharedFolderAccessError.Encoder.EncodeFields(value.Value, writer);
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="AccessError" />.</para>
            /// </summary>
            private class AccessErrorDecoder : enc.StructDecoder<AccessError>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="AccessError" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override AccessError Create()
                {
                    return new AccessError();
                }

                /// <summary>
                /// <para>Set given field.</para>
                /// </summary>
                /// <param name="value">The field value.</param>
                /// <param name="fieldName">The field name.</param>
                /// <param name="reader">The json reader.</param>
                protected override void SetField(AccessError value, string fieldName, enc.IJsonReader reader)
                {
                    switch (fieldName)
                    {
                        case "access_error":
                            value.Value = Dropbox.Api.Sharing.SharedFolderAccessError.Decoder.Decode(reader);
                            break;
                        default:
                            reader.Skip();
                            break;
                    }
                }
            }

            #endregion
        }

        /// <summary>
        /// <para><see cref="Dropbox.Api.Sharing.UpdateFolderPolicyArg.MemberPolicy" /> was set
        /// even though user is not on a team.</para>
        /// </summary>
        public sealed class NotOnTeam : UpdateFolderPolicyError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<NotOnTeam> Encoder = new NotOnTeamEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<NotOnTeam> Decoder = new NotOnTeamDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="NotOnTeam" /> class.</para>
            /// </summary>
            private NotOnTeam()
            {
            }

            /// <summary>
            /// <para>A singleton instance of NotOnTeam</para>
            /// </summary>
            public static readonly NotOnTeam Instance = new NotOnTeam();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="NotOnTeam" />.</para>
            /// </summary>
            private class NotOnTeamEncoder : enc.StructEncoder<NotOnTeam>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(NotOnTeam value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="NotOnTeam" />.</para>
            /// </summary>
            private class NotOnTeamDecoder : enc.StructDecoder<NotOnTeam>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="NotOnTeam" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override NotOnTeam Create()
                {
                    return new NotOnTeam();
                }

                /// <summary>
                /// <para>Decode fields without ensuring start and end object.</para>
                /// </summary>
                /// <param name="reader">The json reader.</param>
                /// <returns>The decoded object.</returns>
                public override NotOnTeam DecodeFields(enc.IJsonReader reader)
                {
                    return NotOnTeam.Instance;
                }
            }

            #endregion
        }

        /// <summary>
        /// <para>Team policy is more restrictive than <see
        /// cref="Dropbox.Api.Sharing.ShareFolderArg.MemberPolicy" />.</para>
        /// </summary>
        public sealed class TeamPolicyDisallowsMemberPolicy : UpdateFolderPolicyError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<TeamPolicyDisallowsMemberPolicy> Encoder = new TeamPolicyDisallowsMemberPolicyEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<TeamPolicyDisallowsMemberPolicy> Decoder = new TeamPolicyDisallowsMemberPolicyDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see
            /// cref="TeamPolicyDisallowsMemberPolicy" /> class.</para>
            /// </summary>
            private TeamPolicyDisallowsMemberPolicy()
            {
            }

            /// <summary>
            /// <para>A singleton instance of TeamPolicyDisallowsMemberPolicy</para>
            /// </summary>
            public static readonly TeamPolicyDisallowsMemberPolicy Instance = new TeamPolicyDisallowsMemberPolicy();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="TeamPolicyDisallowsMemberPolicy" />.</para>
            /// </summary>
            private class TeamPolicyDisallowsMemberPolicyEncoder : enc.StructEncoder<TeamPolicyDisallowsMemberPolicy>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(TeamPolicyDisallowsMemberPolicy value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="TeamPolicyDisallowsMemberPolicy" />.</para>
            /// </summary>
            private class TeamPolicyDisallowsMemberPolicyDecoder : enc.StructDecoder<TeamPolicyDisallowsMemberPolicy>
            {
                /// <summary>
                /// <para>Create a new instance of type <see
                /// cref="TeamPolicyDisallowsMemberPolicy" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override TeamPolicyDisallowsMemberPolicy Create()
                {
                    return new TeamPolicyDisallowsMemberPolicy();
                }

                /// <summary>
                /// <para>Decode fields without ensuring start and end object.</para>
                /// </summary>
                /// <param name="reader">The json reader.</param>
                /// <returns>The decoded object.</returns>
                public override TeamPolicyDisallowsMemberPolicy DecodeFields(enc.IJsonReader reader)
                {
                    return TeamPolicyDisallowsMemberPolicy.Instance;
                }
            }

            #endregion
        }

        /// <summary>
        /// <para>The current account is not allowed to select the specified <see
        /// cref="Dropbox.Api.Sharing.ShareFolderArg.SharedLinkPolicy" />.</para>
        /// </summary>
        public sealed class DisallowedSharedLinkPolicy : UpdateFolderPolicyError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<DisallowedSharedLinkPolicy> Encoder = new DisallowedSharedLinkPolicyEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<DisallowedSharedLinkPolicy> Decoder = new DisallowedSharedLinkPolicyDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="DisallowedSharedLinkPolicy"
            /// /> class.</para>
            /// </summary>
            private DisallowedSharedLinkPolicy()
            {
            }

            /// <summary>
            /// <para>A singleton instance of DisallowedSharedLinkPolicy</para>
            /// </summary>
            public static readonly DisallowedSharedLinkPolicy Instance = new DisallowedSharedLinkPolicy();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="DisallowedSharedLinkPolicy" />.</para>
            /// </summary>
            private class DisallowedSharedLinkPolicyEncoder : enc.StructEncoder<DisallowedSharedLinkPolicy>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(DisallowedSharedLinkPolicy value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="DisallowedSharedLinkPolicy" />.</para>
            /// </summary>
            private class DisallowedSharedLinkPolicyDecoder : enc.StructDecoder<DisallowedSharedLinkPolicy>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="DisallowedSharedLinkPolicy"
                /// />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override DisallowedSharedLinkPolicy Create()
                {
                    return new DisallowedSharedLinkPolicy();
                }

                /// <summary>
                /// <para>Decode fields without ensuring start and end object.</para>
                /// </summary>
                /// <param name="reader">The json reader.</param>
                /// <returns>The decoded object.</returns>
                public override DisallowedSharedLinkPolicy DecodeFields(enc.IJsonReader reader)
                {
                    return DisallowedSharedLinkPolicy.Instance;
                }
            }

            #endregion
        }

        /// <summary>
        /// <para>The current user does not have permission to perform this action.</para>
        /// </summary>
        public sealed class NoPermission : UpdateFolderPolicyError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<NoPermission> Encoder = new NoPermissionEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<NoPermission> Decoder = new NoPermissionDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="NoPermission" />
            /// class.</para>
            /// </summary>
            private NoPermission()
            {
            }

            /// <summary>
            /// <para>A singleton instance of NoPermission</para>
            /// </summary>
            public static readonly NoPermission Instance = new NoPermission();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="NoPermission" />.</para>
            /// </summary>
            private class NoPermissionEncoder : enc.StructEncoder<NoPermission>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(NoPermission value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="NoPermission" />.</para>
            /// </summary>
            private class NoPermissionDecoder : enc.StructDecoder<NoPermission>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="NoPermission" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override NoPermission Create()
                {
                    return new NoPermission();
                }

                /// <summary>
                /// <para>Decode fields without ensuring start and end object.</para>
                /// </summary>
                /// <param name="reader">The json reader.</param>
                /// <returns>The decoded object.</returns>
                public override NoPermission DecodeFields(enc.IJsonReader reader)
                {
                    return NoPermission.Instance;
                }
            }

            #endregion
        }

        /// <summary>
        /// <para>The other object</para>
        /// </summary>
        public sealed class Other : UpdateFolderPolicyError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Other> Encoder = new OtherEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Other> Decoder = new OtherDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Other" /> class.</para>
            /// </summary>
            private Other()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Other</para>
            /// </summary>
            public static readonly Other Instance = new Other();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherEncoder : enc.StructEncoder<Other>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Other value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherDecoder : enc.StructDecoder<Other>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Other" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Other Create()
                {
                    return new Other();
                }

                /// <summary>
                /// <para>Decode fields without ensuring start and end object.</para>
                /// </summary>
                /// <param name="reader">The json reader.</param>
                /// <returns>The decoded object.</returns>
                public override Other DecodeFields(enc.IJsonReader reader)
                {
                    return Other.Instance;
                }
            }

            #endregion
        }
    }
}
