// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Sharing
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>The revoke shared link error object</para>
    /// </summary>
    public class RevokeSharedLinkError
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<RevokeSharedLinkError> Encoder = new RevokeSharedLinkErrorEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<RevokeSharedLinkError> Decoder = new RevokeSharedLinkErrorDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="RevokeSharedLinkError" />
        /// class.</para>
        /// </summary>
        public RevokeSharedLinkError()
        {
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is SharedLinkMalformed</para>
        /// </summary>
        public bool IsSharedLinkMalformed
        {
            get
            {
                return this is SharedLinkMalformed;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a SharedLinkMalformed, or <c>null</c>.</para>
        /// </summary>
        public SharedLinkMalformed AsSharedLinkMalformed
        {
            get
            {
                return this as SharedLinkMalformed;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is SharedLinkNotFound</para>
        /// </summary>
        public bool IsSharedLinkNotFound
        {
            get
            {
                return this is SharedLinkNotFound;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a SharedLinkNotFound, or <c>null</c>.</para>
        /// </summary>
        public SharedLinkNotFound AsSharedLinkNotFound
        {
            get
            {
                return this as SharedLinkNotFound;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is
        /// SharedLinkAccessDenied</para>
        /// </summary>
        public bool IsSharedLinkAccessDenied
        {
            get
            {
                return this is SharedLinkAccessDenied;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a SharedLinkAccessDenied, or <c>null</c>.</para>
        /// </summary>
        public SharedLinkAccessDenied AsSharedLinkAccessDenied
        {
            get
            {
                return this as SharedLinkAccessDenied;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Other</para>
        /// </summary>
        public bool IsOther
        {
            get
            {
                return this is Other;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Other, or <c>null</c>.</para>
        /// </summary>
        public Other AsOther
        {
            get
            {
                return this as Other;
            }
        }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="RevokeSharedLinkError" />.</para>
        /// </summary>
        private class RevokeSharedLinkErrorEncoder : enc.StructEncoder<RevokeSharedLinkError>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(RevokeSharedLinkError value, enc.IJsonWriter writer)
            {
                if (value is SharedLinkMalformed)
                {
                    WriteProperty(".tag", "shared_link_malformed", writer, enc.StringEncoder.Instance);
                    SharedLinkMalformed.Encoder.EncodeFields((SharedLinkMalformed)value, writer);
                    return;
                }
                if (value is SharedLinkNotFound)
                {
                    WriteProperty(".tag", "shared_link_not_found", writer, enc.StringEncoder.Instance);
                    SharedLinkNotFound.Encoder.EncodeFields((SharedLinkNotFound)value, writer);
                    return;
                }
                if (value is SharedLinkAccessDenied)
                {
                    WriteProperty(".tag", "shared_link_access_denied", writer, enc.StringEncoder.Instance);
                    SharedLinkAccessDenied.Encoder.EncodeFields((SharedLinkAccessDenied)value, writer);
                    return;
                }
                if (value is Other)
                {
                    WriteProperty(".tag", "other", writer, enc.StringEncoder.Instance);
                    Other.Encoder.EncodeFields((Other)value, writer);
                    return;
                }
                throw new sys.InvalidOperationException();
            }
        }

        #endregion

        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="RevokeSharedLinkError" />.</para>
        /// </summary>
        private class RevokeSharedLinkErrorDecoder : enc.UnionDecoder<RevokeSharedLinkError>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="RevokeSharedLinkError"
            /// />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override RevokeSharedLinkError Create()
            {
                return new RevokeSharedLinkError();
            }

            /// <summary>
            /// <para>Decode based on given tag.</para>
            /// </summary>
            /// <param name="tag">The tag.</param>
            /// <param name="reader">The json reader.</param>
            /// <returns>The decoded object.</returns>
            protected override RevokeSharedLinkError Decode(string tag, enc.IJsonReader reader)
            {
                switch (tag)
                {
                    case "shared_link_malformed":
                        return SharedLinkMalformed.Decoder.DecodeFields(reader);
                    case "shared_link_not_found":
                        return SharedLinkNotFound.Decoder.DecodeFields(reader);
                    case "shared_link_access_denied":
                        return SharedLinkAccessDenied.Decoder.DecodeFields(reader);
                    case "other":
                        return Other.Decoder.DecodeFields(reader);
                    default:
                        throw new sys.InvalidOperationException();
                }
            }
        }

        #endregion

        /// <summary>
        /// <para>Shared link is malformed.</para>
        /// </summary>
        public sealed class SharedLinkMalformed : RevokeSharedLinkError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<SharedLinkMalformed> Encoder = new SharedLinkMalformedEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<SharedLinkMalformed> Decoder = new SharedLinkMalformedDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="SharedLinkMalformed" />
            /// class.</para>
            /// </summary>
            private SharedLinkMalformed()
            {
            }

            /// <summary>
            /// <para>A singleton instance of SharedLinkMalformed</para>
            /// </summary>
            public static readonly SharedLinkMalformed Instance = new SharedLinkMalformed();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="SharedLinkMalformed" />.</para>
            /// </summary>
            private class SharedLinkMalformedEncoder : enc.StructEncoder<SharedLinkMalformed>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(SharedLinkMalformed value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="SharedLinkMalformed" />.</para>
            /// </summary>
            private class SharedLinkMalformedDecoder : enc.StructDecoder<SharedLinkMalformed>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="SharedLinkMalformed"
                /// />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override SharedLinkMalformed Create()
                {
                    return new SharedLinkMalformed();
                }

                /// <summary>
                /// <para>Decode fields without ensuring start and end object.</para>
                /// </summary>
                /// <param name="reader">The json reader.</param>
                /// <returns>The decoded object.</returns>
                public override SharedLinkMalformed DecodeFields(enc.IJsonReader reader)
                {
                    return SharedLinkMalformed.Instance;
                }
            }

            #endregion
        }

        /// <summary>
        /// <para>The shared link wasn't found</para>
        /// </summary>
        public sealed class SharedLinkNotFound : RevokeSharedLinkError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<SharedLinkNotFound> Encoder = new SharedLinkNotFoundEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<SharedLinkNotFound> Decoder = new SharedLinkNotFoundDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="SharedLinkNotFound" />
            /// class.</para>
            /// </summary>
            private SharedLinkNotFound()
            {
            }

            /// <summary>
            /// <para>A singleton instance of SharedLinkNotFound</para>
            /// </summary>
            public static readonly SharedLinkNotFound Instance = new SharedLinkNotFound();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="SharedLinkNotFound" />.</para>
            /// </summary>
            private class SharedLinkNotFoundEncoder : enc.StructEncoder<SharedLinkNotFound>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(SharedLinkNotFound value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="SharedLinkNotFound" />.</para>
            /// </summary>
            private class SharedLinkNotFoundDecoder : enc.StructDecoder<SharedLinkNotFound>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="SharedLinkNotFound"
                /// />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override SharedLinkNotFound Create()
                {
                    return new SharedLinkNotFound();
                }

                /// <summary>
                /// <para>Decode fields without ensuring start and end object.</para>
                /// </summary>
                /// <param name="reader">The json reader.</param>
                /// <returns>The decoded object.</returns>
                public override SharedLinkNotFound DecodeFields(enc.IJsonReader reader)
                {
                    return SharedLinkNotFound.Instance;
                }
            }

            #endregion
        }

        /// <summary>
        /// <para>The caller is not allowed to access this shared link</para>
        /// </summary>
        public sealed class SharedLinkAccessDenied : RevokeSharedLinkError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<SharedLinkAccessDenied> Encoder = new SharedLinkAccessDeniedEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<SharedLinkAccessDenied> Decoder = new SharedLinkAccessDeniedDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="SharedLinkAccessDenied" />
            /// class.</para>
            /// </summary>
            private SharedLinkAccessDenied()
            {
            }

            /// <summary>
            /// <para>A singleton instance of SharedLinkAccessDenied</para>
            /// </summary>
            public static readonly SharedLinkAccessDenied Instance = new SharedLinkAccessDenied();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="SharedLinkAccessDenied" />.</para>
            /// </summary>
            private class SharedLinkAccessDeniedEncoder : enc.StructEncoder<SharedLinkAccessDenied>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(SharedLinkAccessDenied value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="SharedLinkAccessDenied" />.</para>
            /// </summary>
            private class SharedLinkAccessDeniedDecoder : enc.StructDecoder<SharedLinkAccessDenied>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="SharedLinkAccessDenied"
                /// />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override SharedLinkAccessDenied Create()
                {
                    return new SharedLinkAccessDenied();
                }

                /// <summary>
                /// <para>Decode fields without ensuring start and end object.</para>
                /// </summary>
                /// <param name="reader">The json reader.</param>
                /// <returns>The decoded object.</returns>
                public override SharedLinkAccessDenied DecodeFields(enc.IJsonReader reader)
                {
                    return SharedLinkAccessDenied.Instance;
                }
            }

            #endregion
        }

        /// <summary>
        /// <para>The other object</para>
        /// </summary>
        public sealed class Other : RevokeSharedLinkError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Other> Encoder = new OtherEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Other> Decoder = new OtherDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Other" /> class.</para>
            /// </summary>
            private Other()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Other</para>
            /// </summary>
            public static readonly Other Instance = new Other();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherEncoder : enc.StructEncoder<Other>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Other value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherDecoder : enc.StructDecoder<Other>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Other" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Other Create()
                {
                    return new Other();
                }

                /// <summary>
                /// <para>Decode fields without ensuring start and end object.</para>
                /// </summary>
                /// <param name="reader">The json reader.</param>
                /// <returns>The decoded object.</returns>
                public override Other DecodeFields(enc.IJsonReader reader)
                {
                    return Other.Instance;
                }
            }

            #endregion
        }
    }
}
