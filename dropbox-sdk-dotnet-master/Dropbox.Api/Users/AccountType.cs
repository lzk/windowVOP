// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Users
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>What type of account this user has.</para>
    /// </summary>
    public class AccountType
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<AccountType> Encoder = new AccountTypeEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<AccountType> Decoder = new AccountTypeDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="AccountType" /> class.</para>
        /// </summary>
        public AccountType()
        {
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Basic</para>
        /// </summary>
        public bool IsBasic
        {
            get
            {
                return this is Basic;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Basic, or <c>null</c>.</para>
        /// </summary>
        public Basic AsBasic
        {
            get
            {
                return this as Basic;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Pro</para>
        /// </summary>
        public bool IsPro
        {
            get
            {
                return this is Pro;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Pro, or <c>null</c>.</para>
        /// </summary>
        public Pro AsPro
        {
            get
            {
                return this as Pro;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Business</para>
        /// </summary>
        public bool IsBusiness
        {
            get
            {
                return this is Business;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Business, or <c>null</c>.</para>
        /// </summary>
        public Business AsBusiness
        {
            get
            {
                return this as Business;
            }
        }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="AccountType" />.</para>
        /// </summary>
        private class AccountTypeEncoder : enc.StructEncoder<AccountType>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(AccountType value, enc.IJsonWriter writer)
            {
                if (value is Basic)
                {
                    WriteProperty(".tag", "basic", writer, enc.StringEncoder.Instance);
                    Basic.Encoder.EncodeFields((Basic)value, writer);
                    return;
                }
                if (value is Pro)
                {
                    WriteProperty(".tag", "pro", writer, enc.StringEncoder.Instance);
                    Pro.Encoder.EncodeFields((Pro)value, writer);
                    return;
                }
                if (value is Business)
                {
                    WriteProperty(".tag", "business", writer, enc.StringEncoder.Instance);
                    Business.Encoder.EncodeFields((Business)value, writer);
                    return;
                }
                throw new sys.InvalidOperationException();
            }
        }

        #endregion

        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="AccountType" />.</para>
        /// </summary>
        private class AccountTypeDecoder : enc.UnionDecoder<AccountType>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="AccountType" />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override AccountType Create()
            {
                return new AccountType();
            }

            /// <summary>
            /// <para>Decode based on given tag.</para>
            /// </summary>
            /// <param name="tag">The tag.</param>
            /// <param name="reader">The json reader.</param>
            /// <returns>The decoded object.</returns>
            protected override AccountType Decode(string tag, enc.IJsonReader reader)
            {
                switch (tag)
                {
                    case "basic":
                        return Basic.Decoder.DecodeFields(reader);
                    case "pro":
                        return Pro.Decoder.DecodeFields(reader);
                    case "business":
                        return Business.Decoder.DecodeFields(reader);
                    default:
                        throw new sys.InvalidOperationException();
                }
            }
        }

        #endregion

        /// <summary>
        /// <para>The basic account type.</para>
        /// </summary>
        public sealed class Basic : AccountType
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Basic> Encoder = new BasicEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Basic> Decoder = new BasicDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Basic" /> class.</para>
            /// </summary>
            private Basic()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Basic</para>
            /// </summary>
            public static readonly Basic Instance = new Basic();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Basic" />.</para>
            /// </summary>
            private class BasicEncoder : enc.StructEncoder<Basic>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Basic value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Basic" />.</para>
            /// </summary>
            private class BasicDecoder : enc.StructDecoder<Basic>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Basic" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Basic Create()
                {
                    return new Basic();
                }

                /// <summary>
                /// <para>Decode fields without ensuring start and end object.</para>
                /// </summary>
                /// <param name="reader">The json reader.</param>
                /// <returns>The decoded object.</returns>
                public override Basic DecodeFields(enc.IJsonReader reader)
                {
                    return Basic.Instance;
                }
            }

            #endregion
        }

        /// <summary>
        /// <para>The Dropbox Pro account type.</para>
        /// </summary>
        public sealed class Pro : AccountType
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Pro> Encoder = new ProEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Pro> Decoder = new ProDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Pro" /> class.</para>
            /// </summary>
            private Pro()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Pro</para>
            /// </summary>
            public static readonly Pro Instance = new Pro();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Pro" />.</para>
            /// </summary>
            private class ProEncoder : enc.StructEncoder<Pro>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Pro value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Pro" />.</para>
            /// </summary>
            private class ProDecoder : enc.StructDecoder<Pro>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Pro" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Pro Create()
                {
                    return new Pro();
                }

                /// <summary>
                /// <para>Decode fields without ensuring start and end object.</para>
                /// </summary>
                /// <param name="reader">The json reader.</param>
                /// <returns>The decoded object.</returns>
                public override Pro DecodeFields(enc.IJsonReader reader)
                {
                    return Pro.Instance;
                }
            }

            #endregion
        }

        /// <summary>
        /// <para>The Dropbox Business account type.</para>
        /// </summary>
        public sealed class Business : AccountType
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Business> Encoder = new BusinessEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Business> Decoder = new BusinessDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Business" /> class.</para>
            /// </summary>
            private Business()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Business</para>
            /// </summary>
            public static readonly Business Instance = new Business();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Business" />.</para>
            /// </summary>
            private class BusinessEncoder : enc.StructEncoder<Business>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Business value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Business" />.</para>
            /// </summary>
            private class BusinessDecoder : enc.StructDecoder<Business>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Business" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Business Create()
                {
                    return new Business();
                }

                /// <summary>
                /// <para>Decode fields without ensuring start and end object.</para>
                /// </summary>
                /// <param name="reader">The json reader.</param>
                /// <returns>The decoded object.</returns>
                public override Business DecodeFields(enc.IJsonReader reader)
                {
                    return Business.Instance;
                }
            }

            #endregion
        }
    }
}
