// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Properties
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>Collection of custom properties in filled property templates.</para>
    /// </summary>
    public class PropertyGroup
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<PropertyGroup> Encoder = new PropertyGroupEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<PropertyGroup> Decoder = new PropertyGroupDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="PropertyGroup" /> class.</para>
        /// </summary>
        /// <param name="templateId">A unique identifier for a property template type.</param>
        /// <param name="fields">This is a list of custom properties associated with a file.
        /// There can be up to 32 properties for a template.</param>
        public PropertyGroup(string templateId,
                             col.IEnumerable<PropertyField> fields)
        {
            if (templateId == null)
            {
                throw new sys.ArgumentNullException("templateId");
            }
            if (templateId.Length < 1)
            {
                throw new sys.ArgumentOutOfRangeException("templateId", "Length should be at least 1");
            }
            if (!re.Regex.IsMatch(templateId, @"\A(?:(/|ptid:).*)\z"))
            {
                throw new sys.ArgumentOutOfRangeException("templateId", @"Value should match pattern '\A(?:(/|ptid:).*)\z'");
            }

            var fieldsList = enc.Util.ToList(fields);

            if (fields == null)
            {
                throw new sys.ArgumentNullException("fields");
            }

            this.TemplateId = templateId;
            this.Fields = fieldsList;
        }

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="PropertyGroup" /> class.</para>
        /// </summary>
        /// <remarks>This is to construct an instance of the object when
        /// deserializing.</remarks>
        public PropertyGroup()
        {
        }

        /// <summary>
        /// <para>A unique identifier for a property template type.</para>
        /// </summary>
        public string TemplateId { get; protected set; }

        /// <summary>
        /// <para>This is a list of custom properties associated with a file. There can be up
        /// to 32 properties for a template.</para>
        /// </summary>
        public col.IList<PropertyField> Fields { get; protected set; }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="PropertyGroup" />.</para>
        /// </summary>
        private class PropertyGroupEncoder : enc.StructEncoder<PropertyGroup>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(PropertyGroup value, enc.IJsonWriter writer)
            {
                WriteProperty("template_id", value.TemplateId, writer, enc.StringEncoder.Instance);
                WriteListProperty("fields", value.Fields, writer, Dropbox.Api.Properties.PropertyField.Encoder);
            }
        }

        #endregion


        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="PropertyGroup" />.</para>
        /// </summary>
        private class PropertyGroupDecoder : enc.StructDecoder<PropertyGroup>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="PropertyGroup" />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override PropertyGroup Create()
            {
                return new PropertyGroup();
            }

            /// <summary>
            /// <para>Set given field.</para>
            /// </summary>
            /// <param name="value">The field value.</param>
            /// <param name="fieldName">The field name.</param>
            /// <param name="reader">The json reader.</param>
            protected override void SetField(PropertyGroup value, string fieldName, enc.IJsonReader reader)
            {
                switch (fieldName)
                {
                    case "template_id":
                        value.TemplateId = enc.StringDecoder.Instance.Decode(reader);
                        break;
                    case "fields":
                        value.Fields = ReadList<PropertyField>(reader, Dropbox.Api.Properties.PropertyField.Decoder);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }
        }

        #endregion
    }
}
