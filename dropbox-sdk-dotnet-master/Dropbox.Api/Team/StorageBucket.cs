// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Team
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>Describes the number of users in a specific storage bucket.</para>
    /// </summary>
    public class StorageBucket
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<StorageBucket> Encoder = new StorageBucketEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<StorageBucket> Decoder = new StorageBucketDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="StorageBucket" /> class.</para>
        /// </summary>
        /// <param name="bucket">The name of the storage bucket. For example, '1G' is a bucket
        /// of users with storage size up to 1 Giga.</param>
        /// <param name="users">The number of people whose storage is in the range of this
        /// storage bucket.</param>
        public StorageBucket(string bucket,
                             ulong users)
        {
            if (bucket == null)
            {
                throw new sys.ArgumentNullException("bucket");
            }

            this.Bucket = bucket;
            this.Users = users;
        }

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="StorageBucket" /> class.</para>
        /// </summary>
        /// <remarks>This is to construct an instance of the object when
        /// deserializing.</remarks>
        public StorageBucket()
        {
        }

        /// <summary>
        /// <para>The name of the storage bucket. For example, '1G' is a bucket of users with
        /// storage size up to 1 Giga.</para>
        /// </summary>
        public string Bucket { get; protected set; }

        /// <summary>
        /// <para>The number of people whose storage is in the range of this storage
        /// bucket.</para>
        /// </summary>
        public ulong Users { get; protected set; }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="StorageBucket" />.</para>
        /// </summary>
        private class StorageBucketEncoder : enc.StructEncoder<StorageBucket>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(StorageBucket value, enc.IJsonWriter writer)
            {
                WriteProperty("bucket", value.Bucket, writer, enc.StringEncoder.Instance);
                WriteProperty("users", value.Users, writer, enc.UInt64Encoder.Instance);
            }
        }

        #endregion


        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="StorageBucket" />.</para>
        /// </summary>
        private class StorageBucketDecoder : enc.StructDecoder<StorageBucket>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="StorageBucket" />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override StorageBucket Create()
            {
                return new StorageBucket();
            }

            /// <summary>
            /// <para>Set given field.</para>
            /// </summary>
            /// <param name="value">The field value.</param>
            /// <param name="fieldName">The field name.</param>
            /// <param name="reader">The json reader.</param>
            protected override void SetField(StorageBucket value, string fieldName, enc.IJsonReader reader)
            {
                switch (fieldName)
                {
                    case "bucket":
                        value.Bucket = enc.StringDecoder.Instance.Decode(reader);
                        break;
                    case "users":
                        value.Users = enc.UInt64Decoder.Instance.Decode(reader);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }
        }

        #endregion
    }
}
