// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Team
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>Profile of group member, and role in group.</para>
    /// </summary>
    public class GroupMemberInfo
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<GroupMemberInfo> Encoder = new GroupMemberInfoEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<GroupMemberInfo> Decoder = new GroupMemberInfoDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="GroupMemberInfo" />
        /// class.</para>
        /// </summary>
        /// <param name="profile">Profile of group member.</param>
        /// <param name="accessType">The role that the user has in the group.</param>
        public GroupMemberInfo(MemberProfile profile,
                               GroupAccessType accessType)
        {
            if (profile == null)
            {
                throw new sys.ArgumentNullException("profile");
            }

            if (accessType == null)
            {
                throw new sys.ArgumentNullException("accessType");
            }

            this.Profile = profile;
            this.AccessType = accessType;
        }

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="GroupMemberInfo" />
        /// class.</para>
        /// </summary>
        /// <remarks>This is to construct an instance of the object when
        /// deserializing.</remarks>
        public GroupMemberInfo()
        {
        }

        /// <summary>
        /// <para>Profile of group member.</para>
        /// </summary>
        public MemberProfile Profile { get; protected set; }

        /// <summary>
        /// <para>The role that the user has in the group.</para>
        /// </summary>
        public GroupAccessType AccessType { get; protected set; }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="GroupMemberInfo" />.</para>
        /// </summary>
        private class GroupMemberInfoEncoder : enc.StructEncoder<GroupMemberInfo>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(GroupMemberInfo value, enc.IJsonWriter writer)
            {
                WriteProperty("profile", value.Profile, writer, Dropbox.Api.Team.MemberProfile.Encoder);
                WriteProperty("access_type", value.AccessType, writer, Dropbox.Api.Team.GroupAccessType.Encoder);
            }
        }

        #endregion


        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="GroupMemberInfo" />.</para>
        /// </summary>
        private class GroupMemberInfoDecoder : enc.StructDecoder<GroupMemberInfo>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="GroupMemberInfo" />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override GroupMemberInfo Create()
            {
                return new GroupMemberInfo();
            }

            /// <summary>
            /// <para>Set given field.</para>
            /// </summary>
            /// <param name="value">The field value.</param>
            /// <param name="fieldName">The field name.</param>
            /// <param name="reader">The json reader.</param>
            protected override void SetField(GroupMemberInfo value, string fieldName, enc.IJsonReader reader)
            {
                switch (fieldName)
                {
                    case "profile":
                        value.Profile = Dropbox.Api.Team.MemberProfile.Decoder.Decode(reader);
                        break;
                    case "access_type":
                        value.AccessType = Dropbox.Api.Team.GroupAccessType.Decoder.Decode(reader);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }
        }

        #endregion
    }
}
