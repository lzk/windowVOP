// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Team
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>The revoke desktop client arg object</para>
    /// </summary>
    /// <seealso cref="Dropbox.Api.Team.DeviceSessionArg" />
    public class RevokeDesktopClientArg : DeviceSessionArg
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<RevokeDesktopClientArg> Encoder = new RevokeDesktopClientArgEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<RevokeDesktopClientArg> Decoder = new RevokeDesktopClientArgDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="RevokeDesktopClientArg" />
        /// class.</para>
        /// </summary>
        /// <param name="sessionId">The session id</param>
        /// <param name="teamMemberId">The unique id of the member owning the device</param>
        /// <param name="deleteOnUnlink">Whether to delete all files of the account (this is
        /// possible only if supported by the desktop client and  will be made the next time
        /// the client access the account)</param>
        public RevokeDesktopClientArg(string sessionId,
                                      string teamMemberId,
                                      bool deleteOnUnlink = false)
            : base(sessionId, teamMemberId)
        {
            this.DeleteOnUnlink = deleteOnUnlink;
        }

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="RevokeDesktopClientArg" />
        /// class.</para>
        /// </summary>
        /// <remarks>This is to construct an instance of the object when
        /// deserializing.</remarks>
        public RevokeDesktopClientArg()
        {
            this.DeleteOnUnlink = false;
        }

        /// <summary>
        /// <para>Whether to delete all files of the account (this is possible only if
        /// supported by the desktop client and  will be made the next time the client access
        /// the account)</para>
        /// </summary>
        public bool DeleteOnUnlink { get; protected set; }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="RevokeDesktopClientArg" />.</para>
        /// </summary>
        private class RevokeDesktopClientArgEncoder : enc.StructEncoder<RevokeDesktopClientArg>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(RevokeDesktopClientArg value, enc.IJsonWriter writer)
            {
                WriteProperty("session_id", value.SessionId, writer, enc.StringEncoder.Instance);
                WriteProperty("team_member_id", value.TeamMemberId, writer, enc.StringEncoder.Instance);
                WriteProperty("delete_on_unlink", value.DeleteOnUnlink, writer, enc.BooleanEncoder.Instance);
            }
        }

        #endregion


        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="RevokeDesktopClientArg" />.</para>
        /// </summary>
        private class RevokeDesktopClientArgDecoder : enc.StructDecoder<RevokeDesktopClientArg>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="RevokeDesktopClientArg"
            /// />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override RevokeDesktopClientArg Create()
            {
                return new RevokeDesktopClientArg();
            }

            /// <summary>
            /// <para>Set given field.</para>
            /// </summary>
            /// <param name="value">The field value.</param>
            /// <param name="fieldName">The field name.</param>
            /// <param name="reader">The json reader.</param>
            protected override void SetField(RevokeDesktopClientArg value, string fieldName, enc.IJsonReader reader)
            {
                switch (fieldName)
                {
                    case "session_id":
                        value.SessionId = enc.StringDecoder.Instance.Decode(reader);
                        break;
                    case "team_member_id":
                        value.TeamMemberId = enc.StringDecoder.Instance.Decode(reader);
                        break;
                    case "delete_on_unlink":
                        value.DeleteOnUnlink = enc.BooleanDecoder.Instance.Decode(reader);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }
        }

        #endregion
    }
}
