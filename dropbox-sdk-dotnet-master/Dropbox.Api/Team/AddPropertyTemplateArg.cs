// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Team
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>Arguments for adding property templates.</para>
    /// </summary>
    /// <seealso cref="Dropbox.Api.Properties.PropertyGroupTemplate" />
    public class AddPropertyTemplateArg : Dropbox.Api.Properties.PropertyGroupTemplate
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<AddPropertyTemplateArg> Encoder = new AddPropertyTemplateArgEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<AddPropertyTemplateArg> Decoder = new AddPropertyTemplateArgDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="AddPropertyTemplateArg" />
        /// class.</para>
        /// </summary>
        /// <param name="name">A display name for the property template. Property template
        /// names can be up to 256 bytes.</param>
        /// <param name="description">Description for new property template. Property template
        /// descriptions can be up to 1024 bytes.</param>
        /// <param name="fields">This is a list of custom properties associated with a property
        /// template. There can be up to 64 properties in a single property template.</param>
        public AddPropertyTemplateArg(string name,
                                      string description,
                                      col.IEnumerable<Dropbox.Api.Properties.PropertyFieldTemplate> fields)
            : base(name, description, fields)
        {
        }

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="AddPropertyTemplateArg" />
        /// class.</para>
        /// </summary>
        /// <remarks>This is to construct an instance of the object when
        /// deserializing.</remarks>
        public AddPropertyTemplateArg()
        {
        }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="AddPropertyTemplateArg" />.</para>
        /// </summary>
        private class AddPropertyTemplateArgEncoder : enc.StructEncoder<AddPropertyTemplateArg>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(AddPropertyTemplateArg value, enc.IJsonWriter writer)
            {
                WriteProperty("name", value.Name, writer, enc.StringEncoder.Instance);
                WriteProperty("description", value.Description, writer, enc.StringEncoder.Instance);
                WriteListProperty("fields", value.Fields, writer, Dropbox.Api.Properties.PropertyFieldTemplate.Encoder);
            }
        }

        #endregion


        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="AddPropertyTemplateArg" />.</para>
        /// </summary>
        private class AddPropertyTemplateArgDecoder : enc.StructDecoder<AddPropertyTemplateArg>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="AddPropertyTemplateArg"
            /// />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override AddPropertyTemplateArg Create()
            {
                return new AddPropertyTemplateArg();
            }

            /// <summary>
            /// <para>Set given field.</para>
            /// </summary>
            /// <param name="value">The field value.</param>
            /// <param name="fieldName">The field name.</param>
            /// <param name="reader">The json reader.</param>
            protected override void SetField(AddPropertyTemplateArg value, string fieldName, enc.IJsonReader reader)
            {
                switch (fieldName)
                {
                    case "name":
                        value.Name = enc.StringDecoder.Instance.Decode(reader);
                        break;
                    case "description":
                        value.Description = enc.StringDecoder.Instance.Decode(reader);
                        break;
                    case "fields":
                        value.Fields = ReadList<Dropbox.Api.Properties.PropertyFieldTemplate>(reader, Dropbox.Api.Properties.PropertyFieldTemplate.Decoder);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }
        }

        #endregion
    }
}
