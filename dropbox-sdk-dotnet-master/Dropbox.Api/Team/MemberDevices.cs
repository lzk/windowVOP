// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Team
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>Information on devices of a team's member.</para>
    /// </summary>
    public class MemberDevices
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<MemberDevices> Encoder = new MemberDevicesEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<MemberDevices> Decoder = new MemberDevicesDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="MemberDevices" /> class.</para>
        /// </summary>
        /// <param name="teamMemberId">The member unique Id</param>
        /// <param name="webSessions">List of web sessions made by this team member</param>
        /// <param name="desktopClients">List of desktop clients by this team member</param>
        /// <param name="mobileClients">List of mobile clients by this team member</param>
        public MemberDevices(string teamMemberId,
                             col.IEnumerable<ActiveWebSession> webSessions = null,
                             col.IEnumerable<DesktopClientSession> desktopClients = null,
                             col.IEnumerable<MobileClientSession> mobileClients = null)
        {
            if (teamMemberId == null)
            {
                throw new sys.ArgumentNullException("teamMemberId");
            }

            var webSessionsList = enc.Util.ToList(webSessions);

            var desktopClientsList = enc.Util.ToList(desktopClients);

            var mobileClientsList = enc.Util.ToList(mobileClients);

            this.TeamMemberId = teamMemberId;
            this.WebSessions = webSessionsList;
            this.DesktopClients = desktopClientsList;
            this.MobileClients = mobileClientsList;
        }

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="MemberDevices" /> class.</para>
        /// </summary>
        /// <remarks>This is to construct an instance of the object when
        /// deserializing.</remarks>
        public MemberDevices()
        {
        }

        /// <summary>
        /// <para>The member unique Id</para>
        /// </summary>
        public string TeamMemberId { get; protected set; }

        /// <summary>
        /// <para>List of web sessions made by this team member</para>
        /// </summary>
        public col.IList<ActiveWebSession> WebSessions { get; protected set; }

        /// <summary>
        /// <para>List of desktop clients by this team member</para>
        /// </summary>
        public col.IList<DesktopClientSession> DesktopClients { get; protected set; }

        /// <summary>
        /// <para>List of mobile clients by this team member</para>
        /// </summary>
        public col.IList<MobileClientSession> MobileClients { get; protected set; }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="MemberDevices" />.</para>
        /// </summary>
        private class MemberDevicesEncoder : enc.StructEncoder<MemberDevices>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(MemberDevices value, enc.IJsonWriter writer)
            {
                WriteProperty("team_member_id", value.TeamMemberId, writer, enc.StringEncoder.Instance);
                if (value.WebSessions.Count > 0)
                {
                    WriteListProperty("web_sessions", value.WebSessions, writer, Dropbox.Api.Team.ActiveWebSession.Encoder);
                }
                if (value.DesktopClients.Count > 0)
                {
                    WriteListProperty("desktop_clients", value.DesktopClients, writer, Dropbox.Api.Team.DesktopClientSession.Encoder);
                }
                if (value.MobileClients.Count > 0)
                {
                    WriteListProperty("mobile_clients", value.MobileClients, writer, Dropbox.Api.Team.MobileClientSession.Encoder);
                }
            }
        }

        #endregion


        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="MemberDevices" />.</para>
        /// </summary>
        private class MemberDevicesDecoder : enc.StructDecoder<MemberDevices>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="MemberDevices" />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override MemberDevices Create()
            {
                return new MemberDevices();
            }

            /// <summary>
            /// <para>Set given field.</para>
            /// </summary>
            /// <param name="value">The field value.</param>
            /// <param name="fieldName">The field name.</param>
            /// <param name="reader">The json reader.</param>
            protected override void SetField(MemberDevices value, string fieldName, enc.IJsonReader reader)
            {
                switch (fieldName)
                {
                    case "team_member_id":
                        value.TeamMemberId = enc.StringDecoder.Instance.Decode(reader);
                        break;
                    case "web_sessions":
                        value.WebSessions = ReadList<ActiveWebSession>(reader, Dropbox.Api.Team.ActiveWebSession.Decoder);
                        break;
                    case "desktop_clients":
                        value.DesktopClients = ReadList<DesktopClientSession>(reader, Dropbox.Api.Team.DesktopClientSession.Decoder);
                        break;
                    case "mobile_clients":
                        value.MobileClients = ReadList<MobileClientSession>(reader, Dropbox.Api.Team.MobileClientSession.Decoder);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }
        }

        #endregion
    }
}
