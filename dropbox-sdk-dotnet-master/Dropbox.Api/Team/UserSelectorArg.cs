// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Team
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>Argument for selecting a single user, either by team_member_id, external_id or
    /// email.</para>
    /// </summary>
    public class UserSelectorArg
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<UserSelectorArg> Encoder = new UserSelectorArgEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<UserSelectorArg> Decoder = new UserSelectorArgDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="UserSelectorArg" />
        /// class.</para>
        /// </summary>
        public UserSelectorArg()
        {
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is TeamMemberId</para>
        /// </summary>
        public bool IsTeamMemberId
        {
            get
            {
                return this is TeamMemberId;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a TeamMemberId, or <c>null</c>.</para>
        /// </summary>
        public TeamMemberId AsTeamMemberId
        {
            get
            {
                return this as TeamMemberId;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is ExternalId</para>
        /// </summary>
        public bool IsExternalId
        {
            get
            {
                return this is ExternalId;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a ExternalId, or <c>null</c>.</para>
        /// </summary>
        public ExternalId AsExternalId
        {
            get
            {
                return this as ExternalId;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Email</para>
        /// </summary>
        public bool IsEmail
        {
            get
            {
                return this is Email;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Email, or <c>null</c>.</para>
        /// </summary>
        public Email AsEmail
        {
            get
            {
                return this as Email;
            }
        }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="UserSelectorArg" />.</para>
        /// </summary>
        private class UserSelectorArgEncoder : enc.StructEncoder<UserSelectorArg>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(UserSelectorArg value, enc.IJsonWriter writer)
            {
                if (value is TeamMemberId)
                {
                    WriteProperty(".tag", "team_member_id", writer, enc.StringEncoder.Instance);
                    TeamMemberId.Encoder.EncodeFields((TeamMemberId)value, writer);
                    return;
                }
                if (value is ExternalId)
                {
                    WriteProperty(".tag", "external_id", writer, enc.StringEncoder.Instance);
                    ExternalId.Encoder.EncodeFields((ExternalId)value, writer);
                    return;
                }
                if (value is Email)
                {
                    WriteProperty(".tag", "email", writer, enc.StringEncoder.Instance);
                    Email.Encoder.EncodeFields((Email)value, writer);
                    return;
                }
                throw new sys.InvalidOperationException();
            }
        }

        #endregion

        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="UserSelectorArg" />.</para>
        /// </summary>
        private class UserSelectorArgDecoder : enc.UnionDecoder<UserSelectorArg>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="UserSelectorArg" />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override UserSelectorArg Create()
            {
                return new UserSelectorArg();
            }

            /// <summary>
            /// <para>Decode based on given tag.</para>
            /// </summary>
            /// <param name="tag">The tag.</param>
            /// <param name="reader">The json reader.</param>
            /// <returns>The decoded object.</returns>
            protected override UserSelectorArg Decode(string tag, enc.IJsonReader reader)
            {
                switch (tag)
                {
                    case "team_member_id":
                        return TeamMemberId.Decoder.DecodeFields(reader);
                    case "external_id":
                        return ExternalId.Decoder.DecodeFields(reader);
                    case "email":
                        return Email.Decoder.DecodeFields(reader);
                    default:
                        throw new sys.InvalidOperationException();
                }
            }
        }

        #endregion

        /// <summary>
        /// <para>The team member id object</para>
        /// </summary>
        public sealed class TeamMemberId : UserSelectorArg
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<TeamMemberId> Encoder = new TeamMemberIdEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<TeamMemberId> Decoder = new TeamMemberIdDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="TeamMemberId" />
            /// class.</para>
            /// </summary>
            /// <param name="value">The value</param>
            public TeamMemberId(string value)
            {
                this.Value = value;
            }
            /// <summary>
            /// <para>Initializes a new instance of the <see cref="TeamMemberId" />
            /// class.</para>
            /// </summary>
            private TeamMemberId()
            {
            }

            /// <summary>
            /// <para>Gets the value of this instance.</para>
            /// </summary>
            public string Value { get; private set; }

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="TeamMemberId" />.</para>
            /// </summary>
            private class TeamMemberIdEncoder : enc.StructEncoder<TeamMemberId>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(TeamMemberId value, enc.IJsonWriter writer)
                {
                    WriteProperty("team_member_id", value.Value, writer, enc.StringEncoder.Instance);
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="TeamMemberId" />.</para>
            /// </summary>
            private class TeamMemberIdDecoder : enc.StructDecoder<TeamMemberId>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="TeamMemberId" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override TeamMemberId Create()
                {
                    return new TeamMemberId();
                }

                /// <summary>
                /// <para>Set given field.</para>
                /// </summary>
                /// <param name="value">The field value.</param>
                /// <param name="fieldName">The field name.</param>
                /// <param name="reader">The json reader.</param>
                protected override void SetField(TeamMemberId value, string fieldName, enc.IJsonReader reader)
                {
                    switch (fieldName)
                    {
                        case "team_member_id":
                            value.Value = enc.StringDecoder.Instance.Decode(reader);
                            break;
                        default:
                            reader.Skip();
                            break;
                    }
                }
            }

            #endregion
        }

        /// <summary>
        /// <para>The external id object</para>
        /// </summary>
        public sealed class ExternalId : UserSelectorArg
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<ExternalId> Encoder = new ExternalIdEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<ExternalId> Decoder = new ExternalIdDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="ExternalId" /> class.</para>
            /// </summary>
            /// <param name="value">The value</param>
            public ExternalId(string value)
            {
                this.Value = value;
            }
            /// <summary>
            /// <para>Initializes a new instance of the <see cref="ExternalId" /> class.</para>
            /// </summary>
            private ExternalId()
            {
            }

            /// <summary>
            /// <para>Gets the value of this instance.</para>
            /// </summary>
            public string Value { get; private set; }

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="ExternalId" />.</para>
            /// </summary>
            private class ExternalIdEncoder : enc.StructEncoder<ExternalId>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(ExternalId value, enc.IJsonWriter writer)
                {
                    WriteProperty("external_id", value.Value, writer, enc.StringEncoder.Instance);
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="ExternalId" />.</para>
            /// </summary>
            private class ExternalIdDecoder : enc.StructDecoder<ExternalId>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="ExternalId" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override ExternalId Create()
                {
                    return new ExternalId();
                }

                /// <summary>
                /// <para>Set given field.</para>
                /// </summary>
                /// <param name="value">The field value.</param>
                /// <param name="fieldName">The field name.</param>
                /// <param name="reader">The json reader.</param>
                protected override void SetField(ExternalId value, string fieldName, enc.IJsonReader reader)
                {
                    switch (fieldName)
                    {
                        case "external_id":
                            value.Value = enc.StringDecoder.Instance.Decode(reader);
                            break;
                        default:
                            reader.Skip();
                            break;
                    }
                }
            }

            #endregion
        }

        /// <summary>
        /// <para>The email object</para>
        /// </summary>
        public sealed class Email : UserSelectorArg
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Email> Encoder = new EmailEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Email> Decoder = new EmailDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Email" /> class.</para>
            /// </summary>
            /// <param name="value">The value</param>
            public Email(string value)
            {
                this.Value = value;
            }
            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Email" /> class.</para>
            /// </summary>
            private Email()
            {
            }

            /// <summary>
            /// <para>Gets the value of this instance.</para>
            /// </summary>
            public string Value { get; private set; }

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Email" />.</para>
            /// </summary>
            private class EmailEncoder : enc.StructEncoder<Email>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Email value, enc.IJsonWriter writer)
                {
                    WriteProperty("email", value.Value, writer, enc.StringEncoder.Instance);
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Email" />.</para>
            /// </summary>
            private class EmailDecoder : enc.StructDecoder<Email>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Email" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Email Create()
                {
                    return new Email();
                }

                /// <summary>
                /// <para>Set given field.</para>
                /// </summary>
                /// <param name="value">The field value.</param>
                /// <param name="fieldName">The field name.</param>
                /// <param name="reader">The json reader.</param>
                protected override void SetField(Email value, string fieldName, enc.IJsonReader reader)
                {
                    switch (fieldName)
                    {
                        case "email":
                            value.Value = enc.StringDecoder.Instance.Decode(reader);
                            break;
                        default:
                            reader.Skip();
                            break;
                    }
                }
            }

            #endregion
        }
    }
}
