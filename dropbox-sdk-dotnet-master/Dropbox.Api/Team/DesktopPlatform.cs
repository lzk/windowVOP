// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Team
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>The desktop platform object</para>
    /// </summary>
    public class DesktopPlatform
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<DesktopPlatform> Encoder = new DesktopPlatformEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<DesktopPlatform> Decoder = new DesktopPlatformDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="DesktopPlatform" />
        /// class.</para>
        /// </summary>
        public DesktopPlatform()
        {
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Windows</para>
        /// </summary>
        public bool IsWindows
        {
            get
            {
                return this is Windows;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Windows, or <c>null</c>.</para>
        /// </summary>
        public Windows AsWindows
        {
            get
            {
                return this as Windows;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Mac</para>
        /// </summary>
        public bool IsMac
        {
            get
            {
                return this is Mac;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Mac, or <c>null</c>.</para>
        /// </summary>
        public Mac AsMac
        {
            get
            {
                return this as Mac;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Linux</para>
        /// </summary>
        public bool IsLinux
        {
            get
            {
                return this is Linux;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Linux, or <c>null</c>.</para>
        /// </summary>
        public Linux AsLinux
        {
            get
            {
                return this as Linux;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Other</para>
        /// </summary>
        public bool IsOther
        {
            get
            {
                return this is Other;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Other, or <c>null</c>.</para>
        /// </summary>
        public Other AsOther
        {
            get
            {
                return this as Other;
            }
        }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="DesktopPlatform" />.</para>
        /// </summary>
        private class DesktopPlatformEncoder : enc.StructEncoder<DesktopPlatform>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(DesktopPlatform value, enc.IJsonWriter writer)
            {
                if (value is Windows)
                {
                    WriteProperty(".tag", "windows", writer, enc.StringEncoder.Instance);
                    Windows.Encoder.EncodeFields((Windows)value, writer);
                    return;
                }
                if (value is Mac)
                {
                    WriteProperty(".tag", "mac", writer, enc.StringEncoder.Instance);
                    Mac.Encoder.EncodeFields((Mac)value, writer);
                    return;
                }
                if (value is Linux)
                {
                    WriteProperty(".tag", "linux", writer, enc.StringEncoder.Instance);
                    Linux.Encoder.EncodeFields((Linux)value, writer);
                    return;
                }
                if (value is Other)
                {
                    WriteProperty(".tag", "other", writer, enc.StringEncoder.Instance);
                    Other.Encoder.EncodeFields((Other)value, writer);
                    return;
                }
                throw new sys.InvalidOperationException();
            }
        }

        #endregion

        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="DesktopPlatform" />.</para>
        /// </summary>
        private class DesktopPlatformDecoder : enc.UnionDecoder<DesktopPlatform>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="DesktopPlatform" />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override DesktopPlatform Create()
            {
                return new DesktopPlatform();
            }

            /// <summary>
            /// <para>Decode based on given tag.</para>
            /// </summary>
            /// <param name="tag">The tag.</param>
            /// <param name="reader">The json reader.</param>
            /// <returns>The decoded object.</returns>
            protected override DesktopPlatform Decode(string tag, enc.IJsonReader reader)
            {
                switch (tag)
                {
                    case "windows":
                        return Windows.Decoder.DecodeFields(reader);
                    case "mac":
                        return Mac.Decoder.DecodeFields(reader);
                    case "linux":
                        return Linux.Decoder.DecodeFields(reader);
                    default:
                        return Other.Decoder.DecodeFields(reader);
                }
            }
        }

        #endregion

        /// <summary>
        /// <para>Official Windows Dropbox desktop client</para>
        /// </summary>
        public sealed class Windows : DesktopPlatform
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Windows> Encoder = new WindowsEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Windows> Decoder = new WindowsDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Windows" /> class.</para>
            /// </summary>
            private Windows()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Windows</para>
            /// </summary>
            public static readonly Windows Instance = new Windows();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Windows" />.</para>
            /// </summary>
            private class WindowsEncoder : enc.StructEncoder<Windows>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Windows value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Windows" />.</para>
            /// </summary>
            private class WindowsDecoder : enc.StructDecoder<Windows>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Windows" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Windows Create()
                {
                    return new Windows();
                }

                /// <summary>
                /// <para>Decode fields without ensuring start and end object.</para>
                /// </summary>
                /// <param name="reader">The json reader.</param>
                /// <returns>The decoded object.</returns>
                public override Windows DecodeFields(enc.IJsonReader reader)
                {
                    return Windows.Instance;
                }
            }

            #endregion
        }

        /// <summary>
        /// <para>Official Mac Dropbox desktop client</para>
        /// </summary>
        public sealed class Mac : DesktopPlatform
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Mac> Encoder = new MacEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Mac> Decoder = new MacDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Mac" /> class.</para>
            /// </summary>
            private Mac()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Mac</para>
            /// </summary>
            public static readonly Mac Instance = new Mac();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Mac" />.</para>
            /// </summary>
            private class MacEncoder : enc.StructEncoder<Mac>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Mac value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Mac" />.</para>
            /// </summary>
            private class MacDecoder : enc.StructDecoder<Mac>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Mac" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Mac Create()
                {
                    return new Mac();
                }

                /// <summary>
                /// <para>Decode fields without ensuring start and end object.</para>
                /// </summary>
                /// <param name="reader">The json reader.</param>
                /// <returns>The decoded object.</returns>
                public override Mac DecodeFields(enc.IJsonReader reader)
                {
                    return Mac.Instance;
                }
            }

            #endregion
        }

        /// <summary>
        /// <para>Official Linux Dropbox desktop client</para>
        /// </summary>
        public sealed class Linux : DesktopPlatform
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Linux> Encoder = new LinuxEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Linux> Decoder = new LinuxDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Linux" /> class.</para>
            /// </summary>
            private Linux()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Linux</para>
            /// </summary>
            public static readonly Linux Instance = new Linux();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Linux" />.</para>
            /// </summary>
            private class LinuxEncoder : enc.StructEncoder<Linux>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Linux value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Linux" />.</para>
            /// </summary>
            private class LinuxDecoder : enc.StructDecoder<Linux>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Linux" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Linux Create()
                {
                    return new Linux();
                }

                /// <summary>
                /// <para>Decode fields without ensuring start and end object.</para>
                /// </summary>
                /// <param name="reader">The json reader.</param>
                /// <returns>The decoded object.</returns>
                public override Linux DecodeFields(enc.IJsonReader reader)
                {
                    return Linux.Instance;
                }
            }

            #endregion
        }

        /// <summary>
        /// <para>The other object</para>
        /// </summary>
        public sealed class Other : DesktopPlatform
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Other> Encoder = new OtherEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Other> Decoder = new OtherDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Other" /> class.</para>
            /// </summary>
            private Other()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Other</para>
            /// </summary>
            public static readonly Other Instance = new Other();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherEncoder : enc.StructEncoder<Other>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Other value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherDecoder : enc.StructDecoder<Other>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Other" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Other Create()
                {
                    return new Other();
                }

                /// <summary>
                /// <para>Decode fields without ensuring start and end object.</para>
                /// </summary>
                /// <param name="reader">The json reader.</param>
                /// <returns>The decoded object.</returns>
                public override Other DecodeFields(enc.IJsonReader reader)
                {
                    return Other.Instance;
                }
            }

            #endregion
        }
    }
}
