// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Files
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>The alpha get metadata arg object</para>
    /// </summary>
    /// <seealso cref="Dropbox.Api.Files.GetMetadataArg" />
    public class AlphaGetMetadataArg : GetMetadataArg
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<AlphaGetMetadataArg> Encoder = new AlphaGetMetadataArgEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<AlphaGetMetadataArg> Decoder = new AlphaGetMetadataArgDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="AlphaGetMetadataArg" />
        /// class.</para>
        /// </summary>
        /// <param name="path">The path of a file or folder on Dropbox.</param>
        /// <param name="includeMediaInfo">If true, <see
        /// cref="Dropbox.Api.Files.FileMetadata.MediaInfo" /> is set for photo and
        /// video.</param>
        /// <param name="includeDeleted">If true, <see cref="DeletedMetadata" /> will be
        /// returned for deleted file or folder, otherwise <see
        /// cref="Dropbox.Api.Files.LookupError.NotFound" /> will be returned.</param>
        /// <param name="includeHasExplicitSharedMembers">If true, the results will include a
        /// flag for each file indicating whether or not  that file has any explicit
        /// members.</param>
        /// <param name="includePropertyTemplates">If true, <see
        /// cref="Dropbox.Api.Files.FileMetadata.PropertyGroups" /> is set for files with
        /// custom properties.</param>
        public AlphaGetMetadataArg(string path,
                                   bool includeMediaInfo = false,
                                   bool includeDeleted = false,
                                   bool includeHasExplicitSharedMembers = false,
                                   col.IEnumerable<string> includePropertyTemplates = null)
            : base(path, includeMediaInfo, includeDeleted, includeHasExplicitSharedMembers)
        {
            var includePropertyTemplatesList = enc.Util.ToList(includePropertyTemplates);

            this.IncludePropertyTemplates = includePropertyTemplatesList;
        }

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="AlphaGetMetadataArg" />
        /// class.</para>
        /// </summary>
        /// <remarks>This is to construct an instance of the object when
        /// deserializing.</remarks>
        public AlphaGetMetadataArg()
        {
        }

        /// <summary>
        /// <para>If true, <see cref="Dropbox.Api.Files.FileMetadata.PropertyGroups" /> is set
        /// for files with custom properties.</para>
        /// </summary>
        public col.IList<string> IncludePropertyTemplates { get; protected set; }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="AlphaGetMetadataArg" />.</para>
        /// </summary>
        private class AlphaGetMetadataArgEncoder : enc.StructEncoder<AlphaGetMetadataArg>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(AlphaGetMetadataArg value, enc.IJsonWriter writer)
            {
                WriteProperty("path", value.Path, writer, enc.StringEncoder.Instance);
                WriteProperty("include_media_info", value.IncludeMediaInfo, writer, enc.BooleanEncoder.Instance);
                WriteProperty("include_deleted", value.IncludeDeleted, writer, enc.BooleanEncoder.Instance);
                WriteProperty("include_has_explicit_shared_members", value.IncludeHasExplicitSharedMembers, writer, enc.BooleanEncoder.Instance);
                if (value.IncludePropertyTemplates.Count > 0)
                {
                    WriteListProperty("include_property_templates", value.IncludePropertyTemplates, writer, enc.StringEncoder.Instance);
                }
            }
        }

        #endregion


        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="AlphaGetMetadataArg" />.</para>
        /// </summary>
        private class AlphaGetMetadataArgDecoder : enc.StructDecoder<AlphaGetMetadataArg>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="AlphaGetMetadataArg" />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override AlphaGetMetadataArg Create()
            {
                return new AlphaGetMetadataArg();
            }

            /// <summary>
            /// <para>Set given field.</para>
            /// </summary>
            /// <param name="value">The field value.</param>
            /// <param name="fieldName">The field name.</param>
            /// <param name="reader">The json reader.</param>
            protected override void SetField(AlphaGetMetadataArg value, string fieldName, enc.IJsonReader reader)
            {
                switch (fieldName)
                {
                    case "path":
                        value.Path = enc.StringDecoder.Instance.Decode(reader);
                        break;
                    case "include_media_info":
                        value.IncludeMediaInfo = enc.BooleanDecoder.Instance.Decode(reader);
                        break;
                    case "include_deleted":
                        value.IncludeDeleted = enc.BooleanDecoder.Instance.Decode(reader);
                        break;
                    case "include_has_explicit_shared_members":
                        value.IncludeHasExplicitSharedMembers = enc.BooleanDecoder.Instance.Decode(reader);
                        break;
                    case "include_property_templates":
                        value.IncludePropertyTemplates = ReadList<string>(reader, enc.StringDecoder.Instance);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }
        }

        #endregion
    }
}
