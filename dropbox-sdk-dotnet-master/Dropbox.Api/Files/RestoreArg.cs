// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Files
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>The restore arg object</para>
    /// </summary>
    public class RestoreArg
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<RestoreArg> Encoder = new RestoreArgEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<RestoreArg> Decoder = new RestoreArgDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="RestoreArg" /> class.</para>
        /// </summary>
        /// <param name="path">The path to the file you want to restore.</param>
        /// <param name="rev">The revision to restore for the file.</param>
        public RestoreArg(string path,
                          string rev)
        {
            if (path == null)
            {
                throw new sys.ArgumentNullException("path");
            }
            if (!re.Regex.IsMatch(path, @"\A(?:(/(.|[\r\n])*)|(ns:[0-9]+(/.*)?))\z"))
            {
                throw new sys.ArgumentOutOfRangeException("path", @"Value should match pattern '\A(?:(/(.|[\r\n])*)|(ns:[0-9]+(/.*)?))\z'");
            }

            if (rev == null)
            {
                throw new sys.ArgumentNullException("rev");
            }
            if (rev.Length < 9)
            {
                throw new sys.ArgumentOutOfRangeException("rev", "Length should be at least 9");
            }
            if (!re.Regex.IsMatch(rev, @"\A(?:[0-9a-f]+)\z"))
            {
                throw new sys.ArgumentOutOfRangeException("rev", @"Value should match pattern '\A(?:[0-9a-f]+)\z'");
            }

            this.Path = path;
            this.Rev = rev;
        }

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="RestoreArg" /> class.</para>
        /// </summary>
        /// <remarks>This is to construct an instance of the object when
        /// deserializing.</remarks>
        public RestoreArg()
        {
        }

        /// <summary>
        /// <para>The path to the file you want to restore.</para>
        /// </summary>
        public string Path { get; protected set; }

        /// <summary>
        /// <para>The revision to restore for the file.</para>
        /// </summary>
        public string Rev { get; protected set; }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="RestoreArg" />.</para>
        /// </summary>
        private class RestoreArgEncoder : enc.StructEncoder<RestoreArg>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(RestoreArg value, enc.IJsonWriter writer)
            {
                WriteProperty("path", value.Path, writer, enc.StringEncoder.Instance);
                WriteProperty("rev", value.Rev, writer, enc.StringEncoder.Instance);
            }
        }

        #endregion


        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="RestoreArg" />.</para>
        /// </summary>
        private class RestoreArgDecoder : enc.StructDecoder<RestoreArg>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="RestoreArg" />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override RestoreArg Create()
            {
                return new RestoreArg();
            }

            /// <summary>
            /// <para>Set given field.</para>
            /// </summary>
            /// <param name="value">The field value.</param>
            /// <param name="fieldName">The field name.</param>
            /// <param name="reader">The json reader.</param>
            protected override void SetField(RestoreArg value, string fieldName, enc.IJsonReader reader)
            {
                switch (fieldName)
                {
                    case "path":
                        value.Path = enc.StringDecoder.Instance.Decode(reader);
                        break;
                    case "rev":
                        value.Rev = enc.StringDecoder.Instance.Decode(reader);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }
        }

        #endregion
    }
}
