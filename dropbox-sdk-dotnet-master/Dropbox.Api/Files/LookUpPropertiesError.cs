// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Files
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>The look up properties error object</para>
    /// </summary>
    public class LookUpPropertiesError
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<LookUpPropertiesError> Encoder = new LookUpPropertiesErrorEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<LookUpPropertiesError> Decoder = new LookUpPropertiesErrorDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="LookUpPropertiesError" />
        /// class.</para>
        /// </summary>
        public LookUpPropertiesError()
        {
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is PropertyGroupNotFound</para>
        /// </summary>
        public bool IsPropertyGroupNotFound
        {
            get
            {
                return this is PropertyGroupNotFound;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a PropertyGroupNotFound, or <c>null</c>.</para>
        /// </summary>
        public PropertyGroupNotFound AsPropertyGroupNotFound
        {
            get
            {
                return this as PropertyGroupNotFound;
            }
        }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="LookUpPropertiesError" />.</para>
        /// </summary>
        private class LookUpPropertiesErrorEncoder : enc.StructEncoder<LookUpPropertiesError>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(LookUpPropertiesError value, enc.IJsonWriter writer)
            {
                if (value is PropertyGroupNotFound)
                {
                    WriteProperty(".tag", "property_group_not_found", writer, enc.StringEncoder.Instance);
                    PropertyGroupNotFound.Encoder.EncodeFields((PropertyGroupNotFound)value, writer);
                    return;
                }
                throw new sys.InvalidOperationException();
            }
        }

        #endregion

        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="LookUpPropertiesError" />.</para>
        /// </summary>
        private class LookUpPropertiesErrorDecoder : enc.UnionDecoder<LookUpPropertiesError>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="LookUpPropertiesError"
            /// />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override LookUpPropertiesError Create()
            {
                return new LookUpPropertiesError();
            }

            /// <summary>
            /// <para>Decode based on given tag.</para>
            /// </summary>
            /// <param name="tag">The tag.</param>
            /// <param name="reader">The json reader.</param>
            /// <returns>The decoded object.</returns>
            protected override LookUpPropertiesError Decode(string tag, enc.IJsonReader reader)
            {
                switch (tag)
                {
                    case "property_group_not_found":
                        return PropertyGroupNotFound.Decoder.DecodeFields(reader);
                    default:
                        throw new sys.InvalidOperationException();
                }
            }
        }

        #endregion

        /// <summary>
        /// <para>This property group does not exist for this file.</para>
        /// </summary>
        public sealed class PropertyGroupNotFound : LookUpPropertiesError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<PropertyGroupNotFound> Encoder = new PropertyGroupNotFoundEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<PropertyGroupNotFound> Decoder = new PropertyGroupNotFoundDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="PropertyGroupNotFound" />
            /// class.</para>
            /// </summary>
            private PropertyGroupNotFound()
            {
            }

            /// <summary>
            /// <para>A singleton instance of PropertyGroupNotFound</para>
            /// </summary>
            public static readonly PropertyGroupNotFound Instance = new PropertyGroupNotFound();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="PropertyGroupNotFound" />.</para>
            /// </summary>
            private class PropertyGroupNotFoundEncoder : enc.StructEncoder<PropertyGroupNotFound>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(PropertyGroupNotFound value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="PropertyGroupNotFound" />.</para>
            /// </summary>
            private class PropertyGroupNotFoundDecoder : enc.StructDecoder<PropertyGroupNotFound>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="PropertyGroupNotFound"
                /// />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override PropertyGroupNotFound Create()
                {
                    return new PropertyGroupNotFound();
                }

                /// <summary>
                /// <para>Decode fields without ensuring start and end object.</para>
                /// </summary>
                /// <param name="reader">The json reader.</param>
                /// <returns>The decoded object.</returns>
                public override PropertyGroupNotFound DecodeFields(enc.IJsonReader reader)
                {
                    return PropertyGroupNotFound.Instance;
                }
            }

            #endregion
        }
    }
}
