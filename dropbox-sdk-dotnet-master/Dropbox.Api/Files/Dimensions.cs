// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Files
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>Dimensions for a photo or video.</para>
    /// </summary>
    public class Dimensions
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<Dimensions> Encoder = new DimensionsEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<Dimensions> Decoder = new DimensionsDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="Dimensions" /> class.</para>
        /// </summary>
        /// <param name="height">Height of the photo/video.</param>
        /// <param name="width">Width of the photo/video.</param>
        public Dimensions(ulong height,
                          ulong width)
        {
            this.Height = height;
            this.Width = width;
        }

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="Dimensions" /> class.</para>
        /// </summary>
        /// <remarks>This is to construct an instance of the object when
        /// deserializing.</remarks>
        public Dimensions()
        {
        }

        /// <summary>
        /// <para>Height of the photo/video.</para>
        /// </summary>
        public ulong Height { get; protected set; }

        /// <summary>
        /// <para>Width of the photo/video.</para>
        /// </summary>
        public ulong Width { get; protected set; }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="Dimensions" />.</para>
        /// </summary>
        private class DimensionsEncoder : enc.StructEncoder<Dimensions>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(Dimensions value, enc.IJsonWriter writer)
            {
                WriteProperty("height", value.Height, writer, enc.UInt64Encoder.Instance);
                WriteProperty("width", value.Width, writer, enc.UInt64Encoder.Instance);
            }
        }

        #endregion


        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="Dimensions" />.</para>
        /// </summary>
        private class DimensionsDecoder : enc.StructDecoder<Dimensions>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="Dimensions" />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override Dimensions Create()
            {
                return new Dimensions();
            }

            /// <summary>
            /// <para>Set given field.</para>
            /// </summary>
            /// <param name="value">The field value.</param>
            /// <param name="fieldName">The field name.</param>
            /// <param name="reader">The json reader.</param>
            protected override void SetField(Dimensions value, string fieldName, enc.IJsonReader reader)
            {
                switch (fieldName)
                {
                    case "height":
                        value.Height = enc.UInt64Decoder.Instance.Decode(reader);
                        break;
                    case "width":
                        value.Width = enc.UInt64Decoder.Instance.Decode(reader);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }
        }

        #endregion
    }
}
