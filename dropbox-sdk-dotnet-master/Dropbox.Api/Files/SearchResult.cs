// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Files
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>The search result object</para>
    /// </summary>
    public class SearchResult
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<SearchResult> Encoder = new SearchResultEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<SearchResult> Decoder = new SearchResultDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="SearchResult" /> class.</para>
        /// </summary>
        /// <param name="matches">A list (possibly empty) of matches for the query.</param>
        /// <param name="more">Used for paging. If true, indicates there is another page of
        /// results available that can be fetched by calling <see
        /// cref="Dropbox.Api.Files.Routes.FilesRoutes.SearchAsync" /> again.</param>
        /// <param name="start">Used for paging. Value to set the start argument to when
        /// calling <see cref="Dropbox.Api.Files.Routes.FilesRoutes.SearchAsync" /> to fetch
        /// the next page of results.</param>
        public SearchResult(col.IEnumerable<SearchMatch> matches,
                            bool more,
                            ulong start)
        {
            var matchesList = enc.Util.ToList(matches);

            if (matches == null)
            {
                throw new sys.ArgumentNullException("matches");
            }

            this.Matches = matchesList;
            this.More = more;
            this.Start = start;
        }

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="SearchResult" /> class.</para>
        /// </summary>
        /// <remarks>This is to construct an instance of the object when
        /// deserializing.</remarks>
        public SearchResult()
        {
        }

        /// <summary>
        /// <para>A list (possibly empty) of matches for the query.</para>
        /// </summary>
        public col.IList<SearchMatch> Matches { get; protected set; }

        /// <summary>
        /// <para>Used for paging. If true, indicates there is another page of results
        /// available that can be fetched by calling <see
        /// cref="Dropbox.Api.Files.Routes.FilesRoutes.SearchAsync" /> again.</para>
        /// </summary>
        public bool More { get; protected set; }

        /// <summary>
        /// <para>Used for paging. Value to set the start argument to when calling <see
        /// cref="Dropbox.Api.Files.Routes.FilesRoutes.SearchAsync" /> to fetch the next page
        /// of results.</para>
        /// </summary>
        public ulong Start { get; protected set; }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="SearchResult" />.</para>
        /// </summary>
        private class SearchResultEncoder : enc.StructEncoder<SearchResult>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(SearchResult value, enc.IJsonWriter writer)
            {
                WriteListProperty("matches", value.Matches, writer, Dropbox.Api.Files.SearchMatch.Encoder);
                WriteProperty("more", value.More, writer, enc.BooleanEncoder.Instance);
                WriteProperty("start", value.Start, writer, enc.UInt64Encoder.Instance);
            }
        }

        #endregion


        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="SearchResult" />.</para>
        /// </summary>
        private class SearchResultDecoder : enc.StructDecoder<SearchResult>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="SearchResult" />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override SearchResult Create()
            {
                return new SearchResult();
            }

            /// <summary>
            /// <para>Set given field.</para>
            /// </summary>
            /// <param name="value">The field value.</param>
            /// <param name="fieldName">The field name.</param>
            /// <param name="reader">The json reader.</param>
            protected override void SetField(SearchResult value, string fieldName, enc.IJsonReader reader)
            {
                switch (fieldName)
                {
                    case "matches":
                        value.Matches = ReadList<SearchMatch>(reader, Dropbox.Api.Files.SearchMatch.Decoder);
                        break;
                    case "more":
                        value.More = enc.BooleanDecoder.Instance.Decode(reader);
                        break;
                    case "start":
                        value.Start = enc.UInt64Decoder.Instance.Decode(reader);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }
        }

        #endregion
    }
}
